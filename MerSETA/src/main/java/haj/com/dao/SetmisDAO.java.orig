package haj.com.dao;

import java.math.BigInteger;
import java.util.Hashtable;
import java.util.List;
import java.util.Map;

import haj.com.dataextract.bean.QCTO01Bean;
import haj.com.dataextract.bean.QCTO02Bean;
import haj.com.dataextract.bean.QCTO03Bean;
import haj.com.dataextract.bean.SETMISFile100Bean;
import haj.com.dataextract.bean.SETMISFile200Bean;
import haj.com.dataextract.bean.SETMISFile304Bean;
import haj.com.dataextract.bean.SETMISFile400Bean;
import haj.com.dataextract.bean.SETMISFile401Bean;
import haj.com.dataextract.bean.SETMISFile500Bean;
import haj.com.dataextract.bean.SETMISFile501Bean;
import haj.com.dataextract.bean.SETMISFile502Bean;
import haj.com.dataextract.bean.SETMISFile503Bean;
import haj.com.dataextract.bean.SETMISFile505Bean;
import haj.com.dataextract.bean.SETMISFile506Bean;
import haj.com.dataextract.bean.SETMISFile506BeanSandra;
import haj.com.entity.Company;
import haj.com.entity.SetmisFile100;
import haj.com.entity.SetmisFile200;
import haj.com.entity.SetmisFile304;
import haj.com.entity.SetmisFile400;
import haj.com.entity.SetmisFile401;
import haj.com.entity.SetmisFile500;
import haj.com.entity.SetmisFile501;
import haj.com.entity.SetmisFile502;
import haj.com.entity.SetmisFile503;
import haj.com.entity.SetmisFile505;
import haj.com.entity.SetmisFile506;
import haj.com.framework.AbstractDAO;
import haj.com.framework.AbstractDataProvider;
import haj.com.provider.MySQLProvider;

// TODO: Auto-generated Javadoc
/**
 * The Class BlankDAO.
 */
public class SetmisDAO extends AbstractDAO {

	/*
	 * (non-Javadoc)
	 * 
	 * @see haj.com.framework.AbstractDAO#getDataProvider()
	 */
	@Override
	public AbstractDataProvider getDataProvider() {
		return new MySQLProvider();
	}

	/**
	 * QCTO FILES
	 */

	public List<QCTO01Bean> extractQCTO01Bean(Company company) throws Exception {
		String sql = " SELECT CONCAT('MerSETA-' , LPAD(c.id, 8, '0')) as sdpCode " + " , u.rsa_id_number as nationalId "
				+ "	 , u.passport_number as learnerAlternateId                           "
				+ "	 , IF(u.passport_number is not NULL,533,527) as alternativeIdType    "
				+ "	 , e.qcto_code as equityCode                                         "
				+ "	 , n.qcto_code as nationalityCode                                    "
				+ "   , l.qcto_code as homeLanguageCode                                  "
				+ "    , g.qcto_code as genderCode                                       "
				+ "    , IF(n.qcto_code = 'SA','SA','U') as citizenResidentStatusCode    "
				+ "    , et.qcto_code as socioeconomicStatusCode                         "
				+ "    , ds.qcto_code as disabilityStatusCode                            "
				+ "    , IF(ds.qcto_code > 0,01,02) as disabilityRating                  "
				+ "    , IF(n.qcto_code = 'SA','03','01') as immigrantStatus             "
				+ "    , u.last_name as learnerLastName                                  "
				+ "    , u.first_name as learnerFirstName                                "
				+ "    , u.middle_name as middleName                                     "
				+ "    , t.description as title                                          "
				+ "    , u.date_of_birth as birthDate                                    "
				+ "    , a.address_line_1 as learnerHomeAddress1                         "
				+ "    , a.address_line_2 as learnerHomeAddress2                         "
				+ "    , a.address_line_3 as learnerHomeAddress3                         "
				+ "    , ap.address_line_1 as learnerPostalAddress1                      "
				+ "    , ap.address_line_2 as learnerPostalAddress2                      "
				+ "    , ap.address_line_3 as learnerPostalAddress3                      "
				+ "    , ap.postcode as learnerPostalAddressPostCode                     "
				+ "    , a.postcode as learnerHomeAddressPostCode                        "
				+ "    , u.tel_number as learnerPhoneNumber                              "
				+ "    , u.cell_number as learnerCellPhoneNumber                         "
				+ "    , u.fax_number as learnerFaxNumber                                "
				+ "    , u.email as learnerEmailAddress                                  "
				+ "    , p.stats_prov_id provinceCode                                    "
				+ "	 , cl.stats_saarea_code_id as statssaAreaCode                        "
				+ "	 , u.accept_popi as popiActAgree                                     "
				+ "    , u.create_date as popiActDate                                    "
				+ "    , CURDATE() as dateStamp                                          "
				+ " FROM MerSETA.company_learners cl                                                 "
				+ " inner join company c on c.id = cl.company_id                                     "
				+ " inner join users u on  u.id = cl.user_id                                         "
				+ " inner join gender g on g.id = u.gender_id                                        "
				+ " inner join title t on t.id = u.title_id                                          "
				+ " inner join nationality n on n.id = u.nationality_id                               "
				+ " inner join language l on l.id = u.home_language                                  "
				+ " inner join disability_status ds on ds.id = u.disabilityStatus                    "
				+ " inner join equity e on e.id = u.equity_id                                        "
				+ " inner join address a on a.id = u.residential_address_id                          "
				+ " inner join address ap on ap.id = u.postal_address_id                             "
				+ " inner join municipality m on m.id = a.municipality_id                            "
				+ " inner join province p on p.id = m.provinces_idprovinces                          "
				+ " inner join employment_type et on et.employment_status = u.employment_status  "
				+ " where c.id = :company";
		Map<String, Object> parameters = new Hashtable<String, Object>();
		parameters.put("company", company.getId());
		return (List<QCTO01Bean>) super.nativeSelectSqlList(sql, QCTO01Bean.class, parameters);
	}

	public List<QCTO02Bean> extractQCTO02Bean(Company company) throws Exception {
		String sql = " select 	  clqa.assessment_partner_code as assessmentPartnerCode "
		+ " 		, clqa.enrolled_sdp_code as enrolledSDPCode                                           "
		+ "         , clqa.assessment_centre_code as assessmentCentreCode                                 "
		+ "         , clqa.national_id as nationalId                                                      "
		+ "         , clqa.learner_alternate_id as learnerAlternateID                                     "
		+ "         , clqa.qualification_id as qualificationId                                            "
		+ "         , clqa.learner_readiness_for_eisa_type_id as learnerReadinessForEISATypeId            "
		+ "         , clqa.module_code as moduleCode                                                      "
		+ "         , clqa.module_achievement_status as moduleAchievementStatus                           "
		+ "         , clqa.employment_status as employmentStatus                                          "
		+ "         , clqa.learner_modular_achievement_type_id as learnerModularAchievementTypeID         "
		+ "         , clqa.learner_modular_achievement_date as learnerModularAchievementDate              "
		+ "         , clqa.learner_enrolled_date as learnerEnrolledDate                                   "
		+ "         , clqa.expected_training_completion_date as expectedTrainingCompletionDate            "
		+ "         , clqa.linked_to_workplace as linkedToWorkplacePointOfEntryQualification              "
		+ "         , clqa.qualification_entry_requirement as qualificationEntryRequirementStatus         "
		+ "         , clqa.flc as FLC                                                                     "
		+ "         , clqa.flc_statement_result_number as fLCSORNumber                                    "
		+ "         , clqa.statement_results_status as sorSTATUS                                          "
		+ "         , clqa.statement_results_issue_date as sorIssueDate                                   "
		+ "         , CURDATE() as dateStamp                                                              "
		+ " FROM MerSETA.company_learners cl                                                              "
		+ " inner join users u on cl.user_id = u.id                                                       "
		+ " inner join qualification_type q on q.id = u.qualification_id                                  "
		+ " inner join company_learners_achievement_status_eisa clase on clase.qualification_id = q.id    "
		+ " inner join cl_qualification_achievement clqa on clqa.qualification_id = q.id                  "
		+ " where cl.company_id = :company                                                        ";
		Map<String, Object> parameters = new Hashtable<String, Object>();
		parameters.put("company", company.getId());
		return (List<QCTO02Bean>) super.nativeSelectSqlList(sql, QCTO02Bean.class, parameters);
	}

	public List<QCTO03Bean> extractQCTO03Bean(Company company) throws Exception {
		String sql = "SELECT c.assessment_partner_code as assessmentPartnerCode, "
				+ "  c.assessment_centre_code as assessmentCentreCode,                        "
			    + "  c.national_id as nationalId,                                             "
			    + "  c.learner_alternate_id as learnerAlternateID,                            "
			    + "  c.qualification_id as qualificationId,                                   "
			    + "  c.eisa_component_number as eISAComponentNumber,                          "
			    + "  c.eisa_component_achievement_value as eISAComponentAchievementValue,     "
			    + "  c.date_assessed as dateAssessed,                                         "
			    + "  c.eisa_percentage_obtained as eISAPercentageObtained,                    "
			    + "  CURDATE() as dateStamp                                                   "
			    + "  FROM company_learners_achievement_status_eisa c "
			    + "	left join company_learners cl on cl.qualification_id = c.qualification_id                         "
			    + "  where cl.company_id = :company                                         ";
		Map<String, Object> parameters = new Hashtable<String, Object>();
		parameters.put("company", company.getId());
		return (List<QCTO03Bean>) super.nativeSelectSqlList(sql, QCTO03Bean.class, parameters);
	}

	/**
	 * SETMIS FILES
	 */

	public List<SETMISFile100Bean> extractSETMISFile100Bean() throws Exception {
		String sql = "select CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode,  "
				+ " e.setmis_code as providerETQAId,  "
				+ " sc.code as sICCode,  "
				+ " c.trading_name as providerName,  "
				+ " pt.nlrd_code as providerTypeId,  "
				+ " ap.address_line_1 as providerPostalAddress1,  "
				+ " ap.address_line_2 as providerPostalAddress2,  "
				+ " ap.address_line_3 as providerPostalAddress3,  "
				+ " ap.postcode as providerPostalAddressCode,  "
				+ " c.tel_number as providerPhoneNumber,  "
				+ " c.fax_number as providerFaxNumber,  "
				+ " c.company_registration_number as providerSarsNumber,  "
				+ " '' as providerContactName,  "
				+ " '' as providerContactEmailAddress,  "
				+ " '' as providerContactPhoneNumber,  "
				+ " '' as providerContactCellNumber,  "
				+ " tpa.`accreditation_number` as providerAccreditationNum,  "
				+ " tpa.start_date as providerStartDate,  "
				+ " tpa.expiriy_date as providerEndDate,  "
				+ "  f.etqeDecisionNumber as etqeDecisionNumber,  "
				+ " pc.setmis_code as providerClassId,  "
				+ " ps.setmis_code as providerStatusId,  "
				+ " p.stats_prov_id	as provinceCode,  "
				+ " 'ZA' as countryCode,   "
				+ " ap.latitude_degrees	as latitudeDegree,   "
				+ " ap.latitude_minutes as latitudeMinutes,  "
				+ " ap.latitude_seconds as latitudeSeconds,   "
				+ " ap.longitude_degrees as longitudeDegree,   "
				+ " ap.longitude_minutes as longitudeMinutes,   "
				+ " ap.longitude_seconds as longitudeSeconds,  "
				+ " a.address_line_1 as providerPhysicalAddress1,   "
				+ " a.address_line_2 as providerPhysicalAddress2,   "
				+ " a.address_line_3 as providerPhysicalAddress3,  "
				+ " a.postcode as providerPhysicalAddressCode,   "
				+ " '' as providerWebAddress, "
				+ " c.levy_number as sDLNo,   "
				+ " CURDATE() as dateStamp  "
				+ " from training_provider_application tpa  "
				+ " inner join company c on c.id = tpa.company_id  "
				+ " left join sic_code sc on sc.id = c.sic_code_id  "
				+ " inner join etqa e on tpa.etqa_id = e.id  "
				+ " left join provider_type pt on pt.id = tpa.provider_type  "
				+ " inner join address a on a.id = c.residential_address_id  "
				+ " inner join address ap on ap.id = c.postal_address_id  "
				+ " inner join municipality m on m.id = ap.municipality_id  "
				+ " inner join province p on p.id = m.provinces_idprovinces  "
				+ " left join provider_status ps on ps.id = tpa.provider_status_id "
				+ " left join provider_class pc on pc.id = tpa.provider_class "
				+ " inner join ( select MAX(rcmg.decision_number) as etqeDecisionNumber, rcmg.review_committee_meeting_id from review_committee_meeting_agenda rcmg group by rcmg.review_committee_meeting_id) f on f.review_committee_meeting_id = tpa.review_committee_meeting_id ";
		return (List<SETMISFile100Bean>) super.nativeSelectSqlList(sql, SETMISFile100Bean.class);
	}
	
	public int extractSetmisFile100Insert() throws Exception {
		String sql = " INSERT INTO setmis_file_100 (provider_code, "
	            + " provider_etqa_id, "
	            + " sic_code, "
	            + " provider_name, "
	            + " provider_type_id, "
	            + " provider_postal_address_1, "
	            + " provider_postal_address_2, "
	            + " provider_postal_address_3, "
	            + " provider_postal_address_code, "
	            + " provider_phone_number, "
	            + " provider_fax_number, "
	            + " provider_sars_number, "
	            + " provider_contact_name, "
	            + " provider_contact_email_address, "
	            + " provider_contact_phone_number, "
	            + " provider_contact_cell_number, "
	            + " provider_accreditation_num, "
	            + " provider_start_date, "
	            + " provider_end_date, "
	            + " etqe_decision_number, "
	            + " provider_class_id, "
	            + " provider_status_id, "
	            + " province_code, "
	            + " country_code,  "
	            + " latitude_degree,  "
	            + " latitude_minutes, "
	            + " latitude_seconds,  "
	            + " longitude_degree,  "
	            + " longitude_minutes,  "
	            + " longitude_seconds, "
	            + " provider_physical_address_1,  "
	            + " provider_physical_address_2,  "
	            + " provider_physical_address_3, "
	            + " provider_physical_address_code,  "
	            + " provider_web_address,"
	            + " sdl_no,  "
	            + " date_stamp )"
	            + " select CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode,  "
	    				+ " e.setmis_code as providerETQAId,  "
	    				+ " sc.code as sICCode,  "
	    				+ " c.trading_name as providerName,  "
	    				+ " pt.nlrd_code as providerTypeId,  "
	    				+ " ap.address_line_1 as providerPostalAddress1,  "
	    				+ " ap.address_line_2 as providerPostalAddress2,  "
	    				+ " ap.address_line_3 as providerPostalAddress3,  "
	    				+ " ap.postcode as providerPostalAddressCode,  "
	    				+ " c.tel_number as providerPhoneNumber,  "
	    				+ " c.fax_number as providerFaxNumber,  "
	    				+ " c.company_registration_number as providerSarsNumber,  "
	    				+ " '' as providerContactName,  "
	    				+ " '' as providerContactEmailAddress,  "
	    				+ " '' as providerContactPhoneNumber,  "
	    				+ " '' as providerContactCellNumber,  "
	    				+ " tpa.`accreditation_number` as providerAccreditationNum,  "
	    				+ " tpa.start_date as providerStartDate,  "
	    				+ " tpa.expiriy_date as providerEndDate,  "
	    				+ "  f.etqeDecisionNumber as etqeDecisionNumber,  "
	    				+ " pc.setmis_code as providerClassId,  "
	    				+ " ps.setmis_code as providerStatusId,  "
	    				+ " p.stats_prov_id	as provinceCode,  "
	    				+ " 'ZA' as countryCode,   "
	    				+ " ap.latitude_degrees	as latitudeDegree,   "
	    				+ " ap.latitude_minutes as latitudeMinutes,  "
	    				+ " ap.latitude_seconds as latitudeSeconds,   "
	    				+ " ap.longitude_degrees as longitudeDegree,   "
	    				+ " ap.longitude_minutes as longitudeMinutes,   "
	    				+ " ap.longitude_seconds as longitudeSeconds,  "
	    				+ " a.address_line_1 as providerPhysicalAddress1,   "
	    				+ " a.address_line_2 as providerPhysicalAddress2,   "
	    				+ " a.address_line_3 as providerPhysicalAddress3,  "
	    				+ " a.postcode as providerPhysicalAddressCode,   "
	    				+ " '' as providerWebAddress, "
	    				+ " c.levy_number as sDLNo,   "
	    				+ " CURDATE() as dateStamp  "
	    				+ " from training_provider_application tpa  "
	    				+ " inner join company c on c.id = tpa.company_id  "
	    				+ " left join sic_code sc on sc.id = c.sic_code_id  "
	    				+ " inner join etqa e on tpa.etqa_id = e.id  "
	    				+ " left join provider_type pt on pt.id = tpa.provider_type  "
	    				+ " inner join address a on a.id = c.residential_address_id  "
	    				+ " inner join address ap on ap.id = c.postal_address_id  "
	    				+ " inner join municipality m on m.id = ap.municipality_id  "
	    				+ " inner join province p on p.id = m.provinces_idprovinces  "
	    				+ " left join provider_status ps on ps.id = tpa.provider_status_id "
	    				+ " left join provider_class pc on pc.id = tpa.provider_class "
	    				+ " inner join ( select MAX(rcmg.decision_number) as etqeDecisionNumber, rcmg.review_committee_meeting_id from review_committee_meeting_agenda rcmg group by rcmg.review_committee_meeting_id) f on f.review_committee_meeting_id = tpa.review_committee_meeting_id " ;
	           
		
		return (int) super.nativeSQLInsert(sql);
	}
	
	@SuppressWarnings("unchecked")
	public List<SetmisFile100> allSetmisFile100() throws Exception {
		return (List<SetmisFile100>)super.getList("select o from SetmisFile100 o");
	}
	
	public List<SETMISFile200Bean> extractSETMISFile200Bean() throws Exception {
		String sql = "select c.levy_number as sDLNo "
				+ " , 1 as siteNo "
				+ " , c.seta_id as sETAId "
				+ " , sc.code as sICCode "
				+ " , c.company_registration_number as employerRegistrationNumber "
				+ " , c.company_name as employerCompanyName "
				+ " , c.trading_name as employerTradingName "
				+ " , a.address_line_1 as providerPostalAddress1 "
				+ " , a.address_line_2 as providerPostalAddress2 "
				+ " , a.address_line_3 as providerPostalAddress3 "
				+ " , a.postcode as providerPostalAddressCode "
				+ " , ap.address_line_1 as providerPhysicalAddress1 "
				+ " , ap.address_line_2 as providerPhysicalAddress2 "
				+ " , ap.address_line_3 as providerPhysicalAddress3 "
				+ " , ap.postcode as providerPhysicalAddressCode "
				+ " , c.tel_number as providerPhoneNumber "
				+ " , c.fax_number as providerFaxNumber "
				+ " , u.first_name as providerContactName "
				+ " , u.email as providerContactEmailAddress "
				+ " , u.tel_number as providerContactPhoneNumber "
				+ " , u.cell_number as providerContactCellNumber "
				+ " , IF( c.approval_enum = 0, 2, 1) as employerApprovalStatusId "
				+ " , c.approval_date as  employerApprovalStatusStartDate "
				+ " , '' as employerApprovalStatusEndDate "
				+ " , CONCAT(IF( c.approval_enum = 0, 2, 1) , LPAD(c.id, 8, '0')) as employerApprovalStatusNum "
				+ " , p.stats_prov_id as provinceCode "
				+ " , 'ZA' as countryCode "
				+ " , ap.latitude_degrees as latitudeDegree "
				+ " , ap.latitude_minutes as latitudeMinutes "
				+ " , ap.latitude_seconds as latitudeSeconds "
				+ " , ap.longitude_degrees as longitudeDegree "
				+ " , ap.longitude_minutes as longitudeMinutes "
				+ " , ap.longitude_seconds as longitudeSeconds "
				+ " ,  c.levy_number as mainSDLNo "
				+ " , '' as filler01 "
				+ " , '' as filler02 "
				+ " , CURDATE() as dateStamp "
				+ " from company c "
				+ " inner join sdf_company sdf on sdf.company_id = c.id "
				+ " inner join sic_code sc on sc.id = c.sic_code_id "
				+ " left join address a on a.id = c.postal_address_id "
				+ " left join address ap on a.id = c.residential_address_id "
				+ " inner join users u on u.id = sdf.sdf_id "
				+ " left join municipality m on m.id = a.municipality_id "
				+ " left join province p on p.id = m.provinces_idprovinces "
				+ " where c.levy_number is not NULL and sdf_type_id = 1 ";
		return (List<SETMISFile200Bean>) super.nativeSelectSqlList(sql, SETMISFile200Bean.class);
	}
	
	public int extractSetmisFile200Insert() throws Exception {
		String sql = " INSERT INTO setmis_file_200 ("
			+ "	sdl_no,                                 "
			+ "	site_no,                                "
			+ "	seta_id,                                "
			+ "	sic_code,                               "
			+ "	employer_registration_number,           "
			+ "	employer_company_name,                  "
			+ "	employer_trading_name,                  "
			+ "	employer_postal_address_1,              "
			+ "	employer_postal_address_2,              "
			+ "	employer_postal_address_3,              "
			+ "	employer_postal_address_code,           "
			+ "	employer_physical_address_1,            "
			+ "	employer_physical_address_2,            "
			+ "	employer_physical_address_3,            "
			+ "	employer_physical_address_code,         "
			+ "	employer_phone_number,                  "
			+ "	employer_fax_number,                    "
			+ "	employer_contact_name,                  "
			+ "	employer_contact_email_address,         "
			+ "	employer_contact_phone_number,          "
			+ "	employer_contact_cell_number,           "
			+ "	employer_approval_status_id,            "
			+ "	employer_approval_status_start_date,    "
			+ "	employer_approval_status_end_date,      "
			+ "	employer_approval_status_num,           "
			+ "	province_code,                          "
			+ "	country_code,                           "
			+ "	latitude_degree,                        "
			+ "	latitude_minutes,                       "
			+ "	latitude_seconds,                       "
			+ "	longitude_degree,                       "
			+ "	longitude_minutes,                      "
			+ "	longitude_seconds,                      "
			+ "	main_sdl_no,                            "
			+ "	filler_01,                              "
			+ "	filler_02,                              "
			+ "	date_stamp       )                       "
			+ "select c.levy_number as sDLNo "
			+ " , 1 as siteNo "
			+ " , c.seta_id as sETAId "
			+ " , sc.code as sICCode "
			+ " , c.company_registration_number as employerRegistrationNumber "
			+ " , c.company_name as employerCompanyName "
			+ " , c.trading_name as employerTradingName "
			+ " , a.address_line_1 as providerPostalAddress1 "
			+ " , a.address_line_2 as providerPostalAddress2 "
			+ " , a.address_line_3 as providerPostalAddress3 "
			+ " , a.postcode as providerPostalAddressCode "
			+ " , ap.address_line_1 as providerPhysicalAddress1 "
			+ " , ap.address_line_2 as providerPhysicalAddress2 "
			+ " , ap.address_line_3 as providerPhysicalAddress3 "
			+ " , ap.postcode as providerPhysicalAddressCode "
			+ " , c.tel_number as providerPhoneNumber "
			+ " , c.fax_number as providerFaxNumber "
			+ " , u.first_name as providerContactName "
			+ " , u.email as providerContactEmailAddress "
			+ " , u.tel_number as providerContactPhoneNumber "
			+ " , u.cell_number as providerContactCellNumber "
			+ " , IF( c.approval_enum = 0, 2, 1) as employerApprovalStatusId "
			+ " , c.approval_date as  employerApprovalStatusStartDate "
			+ " , '' as employerApprovalStatusEndDate "
			+ " , CONCAT(IF( c.approval_enum = 0, 2, 1) , LPAD(c.id, 8, '0')) as employerApprovalStatusNum "
			+ " , p.stats_prov_id as provinceCode "
			+ " , 'ZA' as countryCode "
			+ " , ap.latitude_degrees as latitudeDegree "
			+ " , ap.latitude_minutes as latitudeMinutes "
			+ " , ap.latitude_seconds as latitudeSeconds "
			+ " , ap.longitude_degrees as longitudeDegree "
			+ " , ap.longitude_minutes as longitudeMinutes "
			+ " , ap.longitude_seconds as longitudeSeconds "
			+ " ,  c.levy_number as mainSDLNo "
			+ " , '' as filler01 "
			+ " , '' as filler02 "
			+ " , CURDATE() as dateStamp "
			+ " from company c "
			+ " inner join sdf_company sdf on sdf.company_id = c.id "
			+ " inner join sic_code sc on sc.id = c.sic_code_id "
			+ " left join address a on a.id = c.postal_address_id "
			+ " left join address ap on a.id = c.residential_address_id "
			+ " inner join users u on u.id = sdf.sdf_id "
			+ " left join municipality m on m.id = a.municipality_id "
			+ " left join province p on p.id = m.provinces_idprovinces "
			+ " where c.levy_number is not NULL and sdf_type_id = 1 ";
		
		return (int) super.nativeSQLInsert(sql);
	}
	
	@SuppressWarnings("unchecked")
	public List<SetmisFile200> allSetmisFile200() throws Exception {
		return (List<SetmisFile200>)super.getList("select o from SetmisFile200 o");
	}
	
	
	
    public int extractSetmisFile200Validation() throws Exception {
        String sql = " INSERT INTO setmis_file_200 ( sdl_no, "
                + " site_no, "
                + " seta_id, "
                + " sic_code, "
                + " employer_registration_number, "
                + " employer_company_name, "
                + " employer_trading_name, "
                + " employer_postal_address_1, "
                + " employer_postal_address_2, "
                + " employer_postal_address_3, "
                + " employer_postal_address_code, "
                + " employer_physical_address_1, "
                + " employer_physical_address_2, "
                + " employer_physical_address_3, "
                + " employer_physical_address_code, "
                + " employer_phone_number, "
                + " employer_fax_number, "
                + " employer_contact_name, "
                + " employer_contact_email_address, "
                + " employer_contact_phone_number, "
                + " employer_contact_cell_number, "
                + " employer_approval_status_id, "
                + " employer_approval_status_start_date, "
                + " employer_approval_status_end_date, "
                + " employer_approval_status_num, "
                + " province_code, "
                + " country_code, "
                + " latitude_degree, "
                + " latitude_minutes, "
                + " latitude_seconds, "
                + " longitude_degree, "
                + " longitude_minutes, "
                + " longitude_seconds, "
                + " main_sdl_no, "
                + " filler_01, "
                + " filler_02, "
                + " date_stamp ) "
                + "select c.levy_number as sDLNo "
				+ " , 1 as siteNo "
				+ " , c.seta_id as sETAId "
				+ " , sc.code as sICCode "
				+ " , c.company_registration_number as employerRegistrationNumber "
				+ " , c.company_name as employerCompanyName "
				+ " , c.trading_name as employerTradingName "
				+ " , a.address_line_1 as providerPostalAddress1 "
				+ " , a.address_line_2 as providerPostalAddress2 "
				+ " , a.address_line_3 as providerPostalAddress3 "
				+ " , a.postcode as providerPostalAddressCode "
				+ " , ap.address_line_1 as providerPhysicalAddress1 "
				+ " , ap.address_line_2 as providerPhysicalAddress2 "
				+ " , ap.address_line_3 as providerPhysicalAddress3 "
				+ " , ap.postcode as providerPhysicalAddressCode "
				+ " , c.tel_number as providerPhoneNumber "
				+ " , c.fax_number as providerFaxNumber "
				+ " , u.first_name as providerContactName "
				+ " , u.email as providerContactEmailAddress "
				+ " , u.tel_number as providerContactPhoneNumber "
				+ " , u.cell_number as providerContactCellNumber "
				+ " , IF( c.approval_enum = 0, 2, 1) as employerApprovalStatusId "
				+ " , c.approval_date as  employerApprovalStatusStartDate "
				+ " , '' as employerApprovalStatusEndDate "
				+ " , CONCAT(IF( c.approval_enum = 0, 2, 1) , LPAD(c.id, 8, '0')) as employerApprovalStatusNum "
				+ " , p.stats_prov_id as provinceCode "
				+ " , 'ZA' as countryCode "
				+ " , ap.latitude_degrees as latitudeDegree "
				+ " , ap.latitude_minutes as latitudeMinutes "
				+ " , ap.latitude_seconds as latitudeSeconds "
				+ " , ap.longitude_degrees as longitudeDegree "
				+ " , ap.longitude_minutes as longitudeMinutes "
				+ " , ap.longitude_seconds as longitudeSeconds "
				+ " ,  c.levy_number as mainSDLNo "
				+ " , '' as filler01 "
				+ " , '' as filler02 "
				+ " , CURDATE() as dateStamp "
				+ " from company c "
				+ " inner join sdf_company sdf on sdf.company_id = c.id "
				+ " inner join sic_code sc on sc.id = c.sic_code_id "
				+ " left join address a on a.id = c.postal_address_id "
				+ " left join address ap on a.id = c.residential_address_id "
				+ " inner join users u on u.id = sdf.sdf_id "
				+ " left join municipality m on m.id = a.municipality_id "
				+ " left join province p on p.id = m.provinces_idprovinces "
				+ " where c.levy_number is not NULL and sdf_type_id = 1 ";
        return (int) super.nativeSQLInsert(sql);
    }
    
	
	public List<SETMISFile304Bean> extractSETMISFile304Bean() throws Exception {
		String sql = " select spro.programme_id as nonNQFIntervCode "
				+ " , spro.description as nonNQFIntervName "
				+ " , '' as filler01 "
				+ " , sbf.setmis_code as subfieldId "
				+ " , '' as filler02 "
				+ " , sq.qualregistrationstartdate as nonNQFIntervRegStartDate "
				+ " , sq.qualregistrationenddate as nonNQFIntervRegEndDate "
				+ " ,'' as filler03 "
				+ " , e.setmis_code as nonNQFIntervETQEId "
				+ " , '1' as nonNQFIntervStatusId "
				+ " , spro.credits as nonNQFIntervCredit "
				+ " , '1' as learningProgrammeTypeId "
				+ " ,CURDATE() as dateStamp "
				+ " from skills_program spro "
				+ " inner join saqa_qualification sq on sq.id = spro.qualification_id "
				+ " left join subfield sbf on sbf.id = sq.sub_field_id "
				+ " inner join etqa e on e.id = spro.netqa_id "
				+ " UNION ALL "
				+ " select sset.programme_id as NonNQFIntervCode "
				+ " , sset.description as NonNQFIntervName "
				+ " , '' as Filler01 "
				+ " , sbf.setmis_code as SubfieldId "
				+ " , '' as Filler02 "
				+ " , sq.qualregistrationstartdate as NonNQFIntervRegStartDate "
				+ " , sq.qualregistrationenddate as NonNQFIntervRegEndDate "
				+ " ,'' as Filler03 "
				+ " , e.setmis_code as NonNQFIntervETQEId "
				+ " , '1' as NonNQFIntervStatusId "
				+ " , sset.credits as NonNQFIntervCredit "
				+ " , '1' as LearningProgrammeTypeId "
				+ " ,CURDATE() as DateStamp "
				+ " from skills_set sset "
				+ " inner join saqa_qualification sq on sq.id = sset.qualification_id "
				+ " left join subfield sbf on sbf.id = sq.sub_field_id "
				+ " inner join etqa e on e.id = sset.netqa_id ";
		return (List<SETMISFile304Bean>) super.nativeSelectSqlList(sql, SETMISFile304Bean.class);
	}
	
	public int extractSetmisFile304Insert() throws Exception {
		String sql = " INSERT INTO setmis_file_304 ( non_nqf_interv_code, "
                + " non_nqf_interv_name, "
                + " filler_01, "
                + " sub_field_id, "
                + " filler_02, "
                + " non_nqf_interv_reg_start_date, "
                + " non_nqf_interv_reg_end_date, "
                + " filler_03, "
                + " non_nqf_interv_etqe_id, "
                + " non_nqf_interv_status_id, "
                + " non_nqf_interv_credit, "
                + " learning_programme_type_id, "
                + " date_stamp ) "
                + " select spro.programme_id as nonNQFIntervCode  "
                + " , spro.description as nonNQFIntervName  "
                + " , '' as filler01  "
                + " , sbf.setmis_code as subfieldId  "
                + " , '' as filler02  "
                + " , sq.qualregistrationstartdate as nonNQFIntervRegStartDate  "
                + " , sq.qualregistrationenddate as nonNQFIntervRegEndDate  "
                + " ,'' as filler03  "
                + " , e.setmis_code as nonNQFIntervETQEId  "
                + " , '1' as nonNQFIntervStatusId  "
                + " , spro.credits as nonNQFIntervCredit  "
                + " , '1' as learningProgrammeTypeId  "
                + " ,CURDATE() as dateStamp  "
                + " from skills_program spro  "
                + " inner join saqa_qualification sq on sq.id = spro.qualification_id  "
                + " left join subfield sbf on sbf.id = sq.sub_field_id  "
                + " inner join etqa e on e.id = spro.netqa_id  "
                + " UNION ALL  "
                + " select sset.programme_id as NonNQFIntervCode  "
                + " , sset.description as NonNQFIntervName  "
                + " , '' as Filler01  "
                + " , sbf.setmis_code as SubfieldId  "
                + " , '' as Filler02  "
                + " , sq.qualregistrationstartdate as NonNQFIntervRegStartDate  "
                + " , sq.qualregistrationenddate as NonNQFIntervRegEndDate  "
                + " ,'' as Filler03  "
                + " , e.setmis_code as NonNQFIntervETQEId  "
                + " , '1' as NonNQFIntervStatusId  "
                + " , sset.credits as NonNQFIntervCredit  "
                + " , '1' as LearningProgrammeTypeId  "
                + " ,CURDATE() as DateStamp  "
                + " from skills_set sset  "
                + " inner join saqa_qualification sq on sq.id = sset.qualification_id  "
                + " left join subfield sbf on sbf.id = sq.sub_field_id  "
                + " inner join etqa e on e.id = sset.netqa_id ";
		return (int) super.nativeSQLInsert(sql);
	}
	@SuppressWarnings("unchecked")
	public List<SetmisFile304> allSetmisFile304() throws Exception {
		return (List<SetmisFile304>)super.getList("select o from SetmisFile304 o");
	}

	public List<SETMISFile400Bean> extractSETMISFile400Bean() throws Exception {
		String sql = " select u.rsa_id_number as nationalId "
				+ " , u.passport_number as personAlternateId "
				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ " , e.`setmis_code` as equityCode "
				+ " , n.`setmis_code` as nationalityCode "
				+ " , l.`setmis_code` as homeLanguageCode "
				+ " , g.`setmis_code` as genderCode "
				+ " , IF(n.nlrd_code = 'SA','SA','U') as citizenResidentStatusCode "
				+ " , '' as filler01 "
				+ " , '' as filler02 "
				+ " , u.last_name as personLastName "
				+ " , u.first_name as personFirstName "
				+ " , u.middle_name as personMiddleName "
				+ " , t.description as personTitle "
				+ " , u.date_of_birth as personBirthDate "
				+ " , ap.address_line_1 as personHomeAddress1 "
				+ " , ap.address_line_2 as personHomeAddress2 "
				+ " , ap.address_line_3 as personHomeAddress3 "
				+ " , a.address_line_1 as personPostalAddress1 "
				+ " , a.address_line_2 as personPostalAddress2 "
				+ " , a.address_line_3 as personPostalAddress3 "
				+ " , ap.postcode as personHomeAddrPostalCode "
				+ " , a.postcode as personPostalAddrPostalCode "
				+ " , u.tel_number as personPhoneNumber "
				+ " , u.cell_number as personCellPhoneNumber "
				+ " , u.fax_number as personFaxNumber "
				+ " , u.email as personEmailAddress "
				+ " , p.stats_prov_id as provinceCode "
				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
				+ " , etqa.setmis_code as providerETQEId "
				+ " , '' as personPreviousLastname "
				+ " , '' as personPreviousAlternateId "
				+ " , '' as personPreviousAlternativeIdType "
				+ " , '' as personPreviousProviderCode "
				+ " , '' as personPreviousProviderETQEId "
				+ " , '6' as seeingRatingId "
				+ " , '6' as hearingRatingId "
				+ " , '6' as walkingRatingId "
				+ " , '6' as rememberingRatingId "
				+ " , '6' as communicationRatingId "
				+ " , '6' as selfcareRatingId "
				+ " ,  psemis.`new_natemis` as lastSchoolEMISNo "
				+ " , f.lastSchoolYear as lastSchoolYear"
				+ " , ssaac.`setmis_code` as sTATSSAAreaCode "
				+ " , '1' as pOPIActStatusID "
				+ " , u.`create_date` as pOPIActStatusDate "
				+ " , CURDATE() as dateStamp "
				+ " from company_learners cl "
				+ " inner join ( "
				+ " select MAX(cl.`last_school_year`) as lastSchoolYear, cl.user_id from company_learners cl group by cl.user_id "
				+ " ) f on f.user_id = cl.user_id and f.lastSchoolYear = cl.`last_school_year` "
				+ " left join company_qualifications cq on cq.company_id = cl.company_id "
				+ " left join company_unit_standard cus on cus.company_id = cl.company_id "
				+ " left join statssa_area_code ssaac on ssaac.id = cl.`stats_saarea_code_id` "
				+ " left join previous_schools psemis on cl.`previous_schools` = psemis.id "
				+ " inner join users u on u.id = cl.user_id "
				+ " left join equity e on e.id = u.equity_id "
				+ " left join nationality n on u.nationality_id = n.id "
				+ " left join language l on u.home_language = l.id "
				+ " left join gender g on u.gender_id = g.id "
				+ " left join address a on a.id = u.postal_address_id "
				+ " left join address ap on a.id = u.residential_address_id "
				+ " left join disability_status ds on ds.id = u.disabilityStatus "
				+ " left join title t on u.title_id = t.id "
				+ " left join municipality m on m.id = a.municipality_id "
				+ " left join province p on p.id = m.provinces_idprovinces "
				+ " left join training_provider_application tpa on  tpa.users_id = u.id "
	            + " inner join company c on c.id = tpa.company_id "
				+ " left join etqa on etqa.id = tpa.etqa_id "
				+ " group by "
				+ "   nationalId "
				+ " , personAlternateId "
				+ " , alternativeIdType "
				+ " , equityCode "
				+ " , nationalityCode "
				+ " , homeLanguageCode "
				+ " , genderCode "
				+ " , citizenResidentStatusCode "
				+ " , personLastName "
				+ " , personFirstName "
				+ " , personMiddleName "
				+ " , personTitle "
				+ " , personBirthDate "
				+ " , personHomeAddress1 "
				+ " , personHomeAddress2 "
				+ " , personHomeAddress3 "
				+ " , personPostalAddress1 "
				+ " , personPostalAddress2 "
				+ " , personPostalAddress3 "
				+ " , personHomeAddrPostalCode "
				+ " , personPostalAddrPostalCode "
				+ " , personPhoneNumber "
				+ " , personCellPhoneNumber "
				+ " , personFaxNumber "
				+ " , personEmailAddress "
				+ " , provinceCode "
				+ " , providerCode "
				+ " , providerETQEId "
				+ " , personPreviousLastname "
				+ " , personPreviousAlternateId "
				+ " , personPreviousAlternativeIdType "
				+ " , personPreviousProviderCode "
				+ " , personPreviousProviderETQEId "
				+ " , seeingRatingId "
				+ " , hearingRatingId "
				+ " , walkingRatingId "
				+ " , rememberingRatingId "
				+ " , communicationRatingId "
				+ " , selfcareRatingId "
				+ " , lastSchoolEMISNo "
				+ " , lastSchoolYear "
				+ " , sTATSSAAreaCode "
				+ " , pOPIActStatusID "
				+ " , pOPIActStatusDate ";
		return (List<SETMISFile400Bean>) super.nativeSelectSqlList(sql, SETMISFile400Bean.class) ;
	}
	
	public int extractSetmisFile400Insert() throws Exception {
		String sql = " INSERT INTO setmis_file_400 ( national_id, "
				+ " person_alternate_id, "
				+ " alternative_id_type, "
				+ " equity_code, "
				+ " nationality_code, "
				+ " home_language_code, "
				+ " gender_code, "
				+ " citizen_resident_status_code, "
				+ " filler_01, "
				+ " filler_02, "
				+ " person_last_name, "
				+ " person_first_name, "
				+ " person_middle_name, "
				+ " person_title, "
				+ " person_birth_date, "
				+ " person_home_address_1, "
				+ " person_home_address_2, "
				+ " person_home_address_3, "
				+ " person_postal_address_1, "
				+ " person_postal_address_2, "
				+ " person_postal_address_3, "
				+ " person_home_addr_postal_code, "
				+ " person_postal_addr_postal_code, "
				+ " person_phone_number, "
				+ " person_cell_phone_number, "
				+ " person_fax_number, "
				+ " person_email_address, "
				+ " province_code, "
				+ " provider_code, "
				+ " provider_etqe_id, "
				+ " person_previous_last_name, "
				+ " person_previous_alternate_id, "
				+ " person_previous_alternate_id_type, "
				+ " person_previous_provider_code, "
				+ " person_previous_provider_etqe_id, "
				+ " seeing_rating_id, "
				+ " hearing_rating_id, "
				+ " walking_rating_id, "
				+ " remembering_rating_id, "
				+ " communicating_rating_id, "
				+ " selfcare_rating_id, "
				+ " last_school_emis_no, "
				+ " last_school_year, "
				+ " statssa_area_code, "
				+ " popi_act_status_id, "
				+ " popi_act_status_date, "
				+ " date_stamp ) "
				+ " select u.rsa_id_number as nationalId "
				+ " , u.passport_number as personAlternateId "
				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ " , e.`setmis_code` as equityCode "
				+ " , n.`setmis_code` as nationalityCode "
				+ " , l.`setmis_code` as homeLanguageCode "
				+ " , g.`setmis_code` as genderCode "
				+ " , IF(n.nlrd_code = 'SA','SA','U') as citizenResidentStatusCode "
				+ " , '' as filler01 "
				+ " , '' as filler02 "
				+ " , u.last_name as personLastName "
				+ " , u.first_name as personFirstName "
				+ " , u.middle_name as personMiddleName "
				+ " , t.description as personTitle "
				+ " , u.date_of_birth as personBirthDate "
				+ " , ap.address_line_1 as personHomeAddress1 "
				+ " , ap.address_line_2 as personHomeAddress2 "
				+ " , ap.address_line_3 as personHomeAddress3 "
				+ " , a.address_line_1 as personPostalAddress1 "
				+ " , a.address_line_2 as personPostalAddress2 "
				+ " , a.address_line_3 as personPostalAddress3 "
				+ " , ap.postcode as personHomeAddrPostalCode "
				+ " , a.postcode as personPostalAddrPostalCode "
				+ " , u.tel_number as personPhoneNumber "
				+ " , u.cell_number as personCellPhoneNumber "
				+ " , u.fax_number as personFaxNumber "
				+ " , u.email as personEmailAddress "
				+ " , p.stats_prov_id as provinceCode "
				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
				+ " , etqa.setmis_code as providerETQEId "
				+ " , '' as personPreviousLastname "
				+ " , '' as personPreviousAlternateId "
				+ " , '' as personPreviousAlternativeIdType "
				+ " , '' as personPreviousProviderCode "
				+ " , '' as personPreviousProviderETQEId "
				+ " , '6' as seeingRatingId "
				+ " , '6' as hearingRatingId "
				+ " , '6' as walkingRatingId "
				+ " , '6' as rememberingRatingId "
				+ " , '6' as communicationRatingId "
				+ " , '6' as selfcareRatingId "
				+ " ,  psemis.`new_natemis` as lastSchoolEMISNo "
				+ " , f.lastSchoolYear as lastSchoolYear"
				+ " , ssaac.`setmis_code` as sTATSSAAreaCode "
				+ " , '1' as pOPIActStatusID "
				+ " , u.`create_date` as pOPIActStatusDate "
				+ " , CURDATE() as dateStamp "
				+ " from company_learners cl "
				+ " inner join ( "
				+ " select MAX(cl.`last_school_year`) as lastSchoolYear, cl.user_id from company_learners cl group by cl.user_id "
				+ " ) f on f.user_id = cl.user_id and f.lastSchoolYear = cl.`last_school_year` "
				+ " left join company_qualifications cq on cq.company_id = cl.company_id "
				+ " left join company_unit_standard cus on cus.company_id = cl.company_id "
				+ " left join statssa_area_code ssaac on ssaac.id = cl.`stats_saarea_code_id` "
				+ " left join previous_schools psemis on cl.`previous_schools` = psemis.id "
				+ " inner join users u on u.id = cl.user_id "
				+ " left join equity e on e.id = u.equity_id "
				+ " left join nationality n on u.nationality_id = n.id "
				+ " left join language l on u.home_language = l.id "
				+ " left join gender g on u.gender_id = g.id "
				+ " left join address a on a.id = u.postal_address_id "
				+ " left join address ap on a.id = u.residential_address_id "
				+ " left join disability_status ds on ds.id = u.disabilityStatus "
				+ " left join title t on u.title_id = t.id "
				+ " left join municipality m on m.id = a.municipality_id "
				+ " left join province p on p.id = m.provinces_idprovinces "
				+ " left join training_provider_application tpa on  tpa.users_id = u.id "
	            + " inner join company c on c.id = tpa.company_id "
				+ " left join etqa on etqa.id = tpa.etqa_id "
				+ " group by "
				+ "   nationalId "
				+ " , personAlternateId "
				+ " , alternativeIdType "
				+ " , equityCode "
				+ " , nationalityCode "
				+ " , homeLanguageCode "
				+ " , genderCode "
				+ " , citizenResidentStatusCode "
				+ " , personLastName "
				+ " , personFirstName "
				+ " , personMiddleName "
				+ " , personTitle "
				+ " , personBirthDate "
				+ " , personHomeAddress1 "
				+ " , personHomeAddress2 "
				+ " , personHomeAddress3 "
				+ " , personPostalAddress1 "
				+ " , personPostalAddress2 "
				+ " , personPostalAddress3 "
				+ " , personHomeAddrPostalCode "
				+ " , personPostalAddrPostalCode "
				+ " , personPhoneNumber "
				+ " , personCellPhoneNumber "
				+ " , personFaxNumber "
				+ " , personEmailAddress "
				+ " , provinceCode "
				+ " , providerCode "
				+ " , providerETQEId "
				+ " , personPreviousLastname "
				+ " , personPreviousAlternateId "
				+ " , personPreviousAlternativeIdType "
				+ " , personPreviousProviderCode "
				+ " , personPreviousProviderETQEId "
				+ " , seeingRatingId "
				+ " , hearingRatingId "
				+ " , walkingRatingId "
				+ " , rememberingRatingId "
				+ " , communicationRatingId "
				+ " , selfcareRatingId "
				+ " , lastSchoolEMISNo "
				+ " , lastSchoolYear "
				+ " , sTATSSAAreaCode "
				+ " , pOPIActStatusID "
				+ " , pOPIActStatusDate ";
		return (int) super.nativeSQLInsert(sql);
	}
	
	@SuppressWarnings("unchecked")
	public List<SetmisFile400> allSetmisFile400() throws Exception {
		return (List<SetmisFile400>)super.getList("select o from SetmisFile400 o");
	}

	public List<SETMISFile401Bean> extractSETMISFile401Bean() throws Exception {
		String sql = " select u.rsa_id_number as nationalId,  "
				+ " u.passport_number as personAlternateId,  "
				+ " IF(u.passport_number is not NULL,'533','527') as alternativeIdType, "
				+ " '1' as designationId,  "
				+ " amp.certificate_number as designationRegistrationNumber,  "
				+ " eqt.setmis_code as designationETQEId, "
				+ " amp.start_date as designationStartDate, "
				+ " amp.end_date  as designationEndDate, "
				+ " IF(amp.status = 0, '510' , (IF(amp.status = 1, '515' , (IF(amp.status = 2, '506' , (IF(amp.status = 3, '506' ,(IF(amp.status = 4, '506' , (IF(amp.status = 5, '501' , '501' )) )) )))) )) )  as designationStructureStatusId, "
				+ " rcmg.decision_number  as eTQEDecisionNumber,  "
				+ " CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode, "
				+ " eqt.setmis_code as providerETQEId,  "
				+ " '' as filler01,  "
				+ " '' as filler02, "
				+ " '' as filler03,  "
				+ " CURDATE() as dateStamp "
				+ " from assessor_moderator_application amp "
				+ " inner join users u on amp.users_id = u.id "
				+ " left join company_users cu on cu.user_id = u.id and assessor_mod_type is not NULL "
				+ " left join company c on cu.company_id = c.id "
				+ " left join training_provider_application tpa on c.id = tpa.company_id "
				+ " left join etqa eqt on c.`etqa_id` = eqt.id "
				+ " left join Review_committee_meeting_agenda rcmg on rcmg.review_committee_meeting_id  = amp.review_committee_meeting_agenda_id "
				+ " left join user_unit_standard uus on uus.for_assessor_moderator_application_id = amp.id "
				+ " left join user_qualifications uq on uq.for_assessor_moderator_application_id = amp.id "
				+ " group by nationalId, personAlternateId, alternativeIdType, designationId, designationRegistrationNumber, designationETQEId, designationStartDate, designationEndDate, designationStructureStatusId, eTQEDecisionNumber, providerCode, providerETQEId "; 
		return (List<SETMISFile401Bean>) super.nativeSelectSqlList(sql, SETMISFile401Bean.class);
	}
	
    public int extractSetmisFile401Insert() throws Exception {
        String sql = " INSERT INTO setmis_file_401 ( national_id, "
                + " person_alternate_id, "
                + " alternative_id_type, "
                + " designation_id, "
                + " designation_registration_number, "
                + " designation_etqe_id, "
                + " designation_start_date, "
                + " designation_end_date, "
                + " designation_structure_status_id, "
                + " etqe_decision_number, "
                + " provider_code, "
                + " provider_etqe_id, "
                + " filler_01, "
                + " filler_02, "
                + " filler_03, "
                + " date_stamp ) "
                + " select u.rsa_id_number as nationalId,  "
				+ " u.passport_number as personAlternateId,  "
				+ " IF(u.passport_number is not NULL,'533','527') as alternativeIdType, "
				+ " '1' as designationId,  "
				+ " amp.certificate_number as designationRegistrationNumber,  "
				+ " eqt.setmis_code as designationETQEId, "
				+ " amp.start_date as designationStartDate, "
				+ " amp.end_date  as designationEndDate, "
				+ " IF(amp.status = 0, '510' , (IF(amp.status = 1, '515' , (IF(amp.status = 2, '506' , (IF(amp.status = 3, '506' ,(IF(amp.status = 4, '506' , (IF(amp.status = 5, '501' , '501' )) )) )))) )) )  as designationStructureStatusId, "
				+ " rcmg.decision_number  as eTQEDecisionNumber,  "
				+ " CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode, "
				+ " eqt.setmis_code as providerETQEId,  "
				+ " '' as filler01,  "
				+ " '' as filler02, "
				+ " '' as filler03,  "
				+ " CURDATE() as dateStamp "
				+ " from assessor_moderator_application amp "
				+ " inner join users u on amp.users_id = u.id "
				+ " left join company_users cu on cu.user_id = u.id and assessor_mod_type is not NULL "
				+ " left join company c on cu.company_id = c.id "
				+ " left join training_provider_application tpa on c.id = tpa.company_id "
				+ " left join etqa eqt on c.`etqa_id` = eqt.id "
				+ " left join Review_committee_meeting_agenda rcmg on rcmg.review_committee_meeting_id  = amp.review_committee_meeting_agenda_id "
				+ " left join user_unit_standard uus on uus.for_assessor_moderator_application_id = amp.id "
				+ " left join user_qualifications uq on uq.for_assessor_moderator_application_id = amp.id "
				+ " group by nationalId, personAlternateId, alternativeIdType, designationId, designationRegistrationNumber, designationETQEId, designationStartDate, designationEndDate, designationStructureStatusId, eTQEDecisionNumber, providerCode, providerETQEId "; 
           
        return (int) super.nativeSQLInsert(sql);
    }
    
    @SuppressWarnings("unchecked")
    public List<SetmisFile401> allSetmisFile401() throws Exception {
        return (List<SetmisFile401>)super.getList("select o from SetmisFile401 o");
    }

	public List<SETMISFile500Bean> extractSETMISFile500Bean() throws Exception {
		String sql =  " select u.rsa_id_number as nationalId "
				+ " , u.passport_number as personAlternateId "
				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ " , lship.code as learnershipId "
				+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId "
				+ " , '' as assessorRegistrationNumber "
				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate"
				+ " , cl.registered_date as enrolmentDate "
				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
				+ " , etqa.setmis_code as providerETQEId"
				+ " , '' as assessorETQEId "
				+ " , '' as enrolmentStatusReasonId "
				+ " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate"
				+ " , '' as certificateNumber "
				+ " , et.setmis_code as economicStatusId"
				+ " , f.setmis_code as fundingId"
				+ " , '' as cumulativeSpend"
				+ " , ofo.setmis_code as oFOCode "
				+ " , c.levy_number as sDLNo"
				+ " , c.company_site_number as siteNo "
				+ " , ur.setmis_code as urbanRuralId "
				+ " , CURDATE() as dateStamp "
				+ " from company_learners cl "
				+ " inner join users u on u.id = cl.user_id"
				+ " inner join learnership lship on lship.id = cl.learnership_id"
				+ " inner join saqa_qualification sq on sq.id = lship.qualification_id and qualificationtypeid <> 554"
				+ " inner join intervention_type it on it.id = cl.intervention_type_id "
				+ " inner join company c on c.id = cl.company_id"
				+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ " left join etqa on etqa.id = c.etqa_id "
				+ " inner join employment_type et on et.employment_status = u.employment_status "
				+ " left join funding f on f.id = cl.funding"
				+ " left join ofo on ofo.id = cl.ofo_codes_id "
				+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ " where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is null and cl.learnership_id is not null";
		return (List<SETMISFile500Bean>) super.nativeSelectSqlList(sql, SETMISFile500Bean.class);
	}
	
	 public int extractSetmisFile500Insert() throws Exception {
	        String sql = " INSERT INTO setmis_file_500 ( national_id, "
	                + " person_alternate_id, "
	                + " alternative_id_type, "
	                + " learnership_id, "
	                + " enrolment_status_id, "
	                + " assessor_registration_number, "
	                + " enrolment_status_date, "
	                + " enrolment_date, "
	                + " provider_code, "
	                + " provider_etqe_id, "
	                + " assessor_etqe_id, "
	                + " enrolment_status_reason_id, "
	                + " most_recent_registration_date, "
	                + " certificate_number, "
	                + " economic_status_id, "
	                + " funding_id, "
	                + " cumulative_spend, "
	                + " ofo_code, "
	                + " sdl_no, "
	                + " site_no, "
	                + " urban_rural_id, "
	                + " date_stamp ) "
	                + " select u.rsa_id_number as nationalId "
<<<<<<< HEAD
					+ " , u.passport_number as personAlternateId "
					+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
					+ " , lship.code as learnershipId "
					+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId "
					+ " , '' as assessorRegistrationNumber "
					+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate"
					+ " , cl.registered_date as enrolmentDate "
					+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
					+ " , etqa.setmis_code as providerETQEId"
					+ " , '' as assessorETQEId "
					+ " , '' as enrolmentStatusReasonId "
					+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as mostRecentRegistrationDate"
					+ " , '' as certificateNumber "
					+ " , et.setmis_code as economicStatusId"
					+ " , f.setmis_code as fundingId"
					+ " , '' as cumulativeSpend"
					+ " , ofo.setmis_code as oFOCode "
					+ " , c.levy_number as sDLNo"
					+ " , c.company_site_number as siteNo "
					+ " , ur.setmis_code as urbanRuralId "
					+ " , CURDATE() as dateStamp "
					+ " from company_learners cl "
					+ " inner join users u on u.id = cl.user_id"
					+ " inner join learnership lship on lship.id = cl.learnership_id"
					+ " inner join saqa_qualification sq on sq.id = lship.qualification_id and qualificationtypeid <> 554"
					+ " inner join intervention_type it on it.id = cl.intervention_type_id "
					+ " inner join company c on c.id = cl.company_id"
					+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
					+ " left join etqa on etqa.id = c.etqa_id "
					+ " inner join employment_type et on et.employment_status = u.employment_status "
					+ " left join funding f on f.id = cl.funding"
					+ " left join ofo on ofo.id = cl.ofo_codes_id "
					+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
					+ " where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is null and cl.learnership_id is not null";
=======
	                + " , u.passport_number as personAlternateId "
	                + " , IF(u.passport_number is not NULL,533,527)  as alternativeIdType "
	                + " , lship.code as learnershipId "
	                + " , IF(cl.completion_date is NULL, 3, 2 ) as enrolmentStatusId "
	                + " , '' as assessorRegistrationNumber "
	                + " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate"
	                + " , cl.registered_date as enrolmentDate "
	                + " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
	                + " , etqa.setmis_code as providerETQEId"
	                + " , '' as assessorETQEId "
	                + " , '' as enrolmentStatusReasonId "
	                + " , IF(cl.completion_date is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate"
	                + " , '' as certificateNumber "
	                + " , et.setmis_code as economicStatusId"
	                + " , f.setmis_code as fundingId"
	                + " , '' as cumulativeSpend"
	                + " , ofo.setmis_code as oFOCode "
	                + " , c.levy_number as sDLNo"
	                + " , c.company_site_number as siteNo "
	                + " , ur.setmis_code as urbanRuralId "
	                + " , CURDATE() as dateStamp "
	                + " from company_learners cl "
	                + " inner join users u on u.id = cl.user_id"
	                + " inner join learnership lship on lship.id = cl.learnership_id"
	                + " inner join saqa_qualification sq on sq.id = lship.qualification_id and qualificationtypeid <> 554"
	                + " inner join intervention_type it on it.id = cl.intervention_type_id "
	                + " inner join company c on c.id = cl.company_id"
	                + " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
	                + " left join etqa on etqa.id = c.etqa_id "
	                + " inner join employment_type et on et.employment_status = u.employment_status "
	                + " left join funding f on f.id = cl.funding"
	                + " left join ofo on ofo.id = cl.ofo_codes_id "
	                + " left join urbal_rural ur on ur.id = u.urban_rural_enum "
	                + " where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is null and cl.learnership_id is not null";
>>>>>>> 7ead8325ae3e4619d20e1713b01dc7fd93e4588f
	        return (int) super.nativeSQLInsert(sql);
	    }
	    
	    @SuppressWarnings("unchecked")
	    public List<SetmisFile500> allSetmisFile500() throws Exception {
	        return (List<SetmisFile500>)super.getList("select o from SetmisFile500 o");
	    }

	public List<SETMISFile501Bean> extractSETMISFile501Bean() throws Exception {
		String sql = " select u.rsa_id_number as nationalId "
				+ " , u.passport_number as personAlternateId "
				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ " , sq.qualificationid as qualificationId "
				+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId "
				+ " , '' as assessorRegistrationNumber "
				+ " , '7' as enrolmentTypeId "
				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate "
				+ " , cl.registered_date as enrolmentDate "
				+ " , '' as filler01 "
				+ " , '2' as partOfId "
				+ " , '' as learnershipId "
				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
				+ " , etqa.setmis_code as providerETQEId "
				+ " , '' as assessorETQEId "
				+ " , '' as filler02 "
				+ " , '' as enrolmentStatusReasonId "
				+ " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate"
				+ " , '' as certificateNumber "
				+ " , '' as filler03 "
				+ " , '' as filler04 "
				+ " , '' as filler05 "
				+ " , '' as filler06 "
				+ " , et.setmis_code as economicStatusId "
				+ " , '' as filler07 "
				+ " , c.levy_number as sDLNo "
				+ " , '' as filler08 "
				+ " , '' as filler09 "
				+ " , '' as filler10 "
				+ " , '' as filler11 "
				+ " , c.company_site_number as siteNo "
				+ " , '' as practicalProviderCode "
				+ " , '' as practicalProviderETQEId "
				+ " , f.setmis_code as fundingId "
				+ " , '' as cumulativeSpending "
				+ " , ofo.setmis_code as oFOCode "
				+ " , ur.setmis_code as urbanRuralId "
				+ " , it.setmis_code as learningProgrammeTypeId "
				+ " , CURDATE() as dateStamp "
				+ " from company_learners cl "
				+ " inner join users u on u.id = cl.user_id"
				+ " inner join saqa_qualification sq on sq.id = cl.qualification_id and qualificationtypeid <> 554"
				+ " inner join intervention_type it on it.id = cl.intervention_type_id "
				+ " inner join company c on c.id = cl.company_id"
				+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ " left join etqa on etqa.id = c.etqa_id "
				+ " inner join employment_type et on et.employment_status = u.employment_status "
				+ " left join funding f on f.id = cl.funding"
				+ " left join ofo on ofo.id = cl.ofo_codes_id "
				+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ " UNION ALL"
				+ " select u.rsa_id_number as nationalId "
				+ " , u.passport_number as personAlternateId "
				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ " , sq.qualificationid as qualificationId "
				+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId "
				+ " , '' as assessorRegistrationNumber "
				+ " , '7' as enrolmentTypeId "
				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate "
				+ " , cl.registered_date as enrolmentDate "
				+ " , '' as filler01 "
				+ " , '2' as partOfId "
				+ " , '' as learnershipId "
				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
				+ " , etqa.setmis_code as providerETQEId "
				+ " , '' as assessorETQEId "
				+ " , '' as filler02 "
				+ " , '' as enrolmentStatusReasonId "
				+ " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate"
				+ " , '' as certificateNumber "
				+ " , '' as filler03 "
				+ " , '' as filler04 "
				+ " , '' as filler05 "
				+ " , '' as filler06 "
				+ " , et.setmis_code as economicStatusId "
				+ " , '' as filler07 "
				+ " , c.levy_number as sDLNo "
				+ " , '' as filler08 "
				+ " , '' as filler09 "
				+ " , '' as filler10 "
				+ " , '' as filler11 "
				+ " , '' as cumulativeSpending "
				+ " , c.company_site_number as siteNo "
				+ " , CONCAT('MERSETA-' , tpat.`accreditation_number`) as practicalProviderCode "
				+ " , etqt.setmis_code as practicalProviderETQEId "
				+ " , f.setmis_code as fundingId "
				+ " , ofo.setmis_code as oFOCode "
				+ " , ur.setmis_code as urbanRuralId "
				+ " , it.setmis_code as learningProgrammeTypeId "
				+ " , CURDATE() as dateStamp "
				+ " from company_learners cl "
				+ " inner join users u on u.id = cl.user_id"
				+ " inner join saqa_qualification sq on sq.id = cl.qualification_id and qualificationtypeid = 554"
				+ " inner join intervention_type it on it.id = cl.intervention_type_id "
				+ " inner join company c on c.id = cl.company_id"
				+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ " left join etqa on etqa.id = c.etqa_id "
				+ " inner join employment_type et on et.employment_status = u.employment_status "
				+ " left join funding f on f.id = cl.funding"
				+ " left join ofo on ofo.id = cl.ofo_codes_id "
				+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ " inner join company_learners_trade_test cltt on cltt.company_learners_id = cl.id"
				+ " inner join company ct on ct.id = cltt.`preferred_training_center_id`"
				+ " inner join training_provider_application tpat on tpat.company_id = ct.id and tpat.`accreditation_number` is not null"
				+ " left join etqa etqt on etqt.id = ct.etqa_id "
				+ " UNION ALL"
				+ " select u.rsa_id_number as nationalId "
				+ " , u.passport_number as personAlternateId "
				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ " , sq.qualificationid as qualificationId "
				+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId "
				+ " , '' as assessorRegistrationNumber "
				+ " , '7' as enrolmentTypeId "
				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate "
				+ " , cl.registered_date as enrolmentDate "
				+ " , '' as filler01 "
				+ " , '3' as partOfId "
				+ " , lship.code as learnershipId "
				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
				+ " , etqa.setmis_code as providerETQEId "
				+ " , '' as assessorETQEId "
				+ " , '' as filler02 "
				+ " , '' as enrolmentStatusReasonId "
				+ " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate"
				+ " , '' as certificateNumber "
				+ " , '' as filler03 "
				+ " , '' as filler04 "
				+ " , '' as filler05 "
				+ " , '' as filler06 "
				+ " , et.setmis_code as economicStatusId "
				+ " , '' as filler07 "
				+ " , c.levy_number as sDLNo "
				+ " , '' as filler08 "
				+ " , '' as filler09 "
				+ " , '' as filler10 "
				+ " , '' as filler11 "
				+ " , '' as cumulativeSpending "
				+ " , c.company_site_number as siteNo "
				+ " , '' as practicalProviderCode "
				+ " , '' as practicalProviderETQEId "
				+ " , f.setmis_code as fundingId "
				+ " , ofo.setmis_code as oFOCode "
				+ " , ur.setmis_code as urbanRuralId "
				+ " , it.setmis_code as learningProgrammeTypeId "
				+ " , CURDATE() as dateStamp "
				+ " from company_learners cl "
				+ " inner join users u on u.id = cl.user_id"
				+ " inner join learnership lship on lship.id = cl.learnership_id"
				+ " inner join saqa_qualification sq on sq.id = lship.qualification_id and qualificationtypeid <> 554"
				+ " inner join intervention_type it on it.id = cl.intervention_type_id "
				+ " inner join company c on c.id = cl.company_id"
				+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ " left join etqa on etqa.id = c.etqa_id "
				+ " inner join employment_type et on et.employment_status = u.employment_status "
				+ " left join funding f on f.id = cl.funding"
				+ " left join ofo on ofo.id = cl.ofo_codes_id "
				+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ " where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is null and cl.learnership_id is not null"
				+ " UNION ALL"
				+ " select u.rsa_id_number as nationalId "
				+ " , u.passport_number as personAlternateId "
				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ " , sq.qualificationid as qualificationId "
				+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId "
				+ " , '' as assessorRegistrationNumber "
				+ " , '7' as enrolmentTypeId "
				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate "
				+ " , cl.registered_date as enrolmentDate "
				+ " , '' as filler01 "
				+ " , '5' as partOfId "
				+ " , '' as learnershipId "
				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
				+ " , etqa.setmis_code as providerETQEId "
				+ " , '' as assessorETQEId "
				+ " , '' as filler02 "
				+ " , '' as enrolmentStatusReasonId "
				+ " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate"
				+ " , '' as certificateNumber "
				+ " , '' as filler03 "
				+ " , '' as filler04 "
				+ " , '' as filler05 "
				+ " , '' as filler06 "
				+ " , et.setmis_code as economicStatusId "
				+ " , '' as filler07 "
				+ " , c.levy_number as sDLNo "
				+ " , '' as filler08 "
				+ " , '' as filler09 "
				+ " , '' as filler10 "
				+ " , '' as filler11 "
				+ " , '' as cumulativeSpending "
				+ " , c.company_site_number as siteNo "
				+ " , '' as practicalProviderCode "
				+ " , '' as practicalProviderETQEId "
				+ " , f.setmis_code as fundingId "
				+ " , ofo.setmis_code as oFOCode "
				+ " , ur.setmis_code as urbanRuralId "
				+ " , it.setmis_code as learningProgrammeTypeId "
				+ " , CURDATE() as dateStamp "
				+ " from company_learners cl "
				+ " inner join users u on u.id = cl.user_id"
				+ " inner join skills_set sset on sset.id = cl.skills_set_id"
				+ " inner join saqa_qualification sq on sq.id = sset.qualification_id and qualificationtypeid <> 554"
				+ " inner join intervention_type it on it.id = cl.intervention_type_id "
				+ " inner join company c on c.id = cl.company_id"
				+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ " left join etqa on etqa.id = c.etqa_id "
				+ " inner join employment_type et on et.employment_status = u.employment_status "
				+ " left join funding f on f.id = cl.funding"
				+ " left join ofo on ofo.id = cl.ofo_codes_id "
				+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ " where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is not null and cl.learnership_id is null"
				+ " UNION ALL"
				+ " select u.rsa_id_number as nationalId "
				+ " , u.passport_number as personAlternateId "
				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ " , sq.qualificationid as qualificationId "
				+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId "
				+ " , '' as assessorRegistrationNumber "
				+ " , '7' as enrolmentTypeId "
				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate "
				+ " , cl.registered_date as enrolmentDate "
				+ " , '' as filler01 "
				+ " , '5' as partOfId "
				+ " , '' as learnershipId "
				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
				+ " , etqa.setmis_code as providerETQEId "
				+ " , '' as assessorETQEId "
				+ " , '' as filler02 "
				+ " , '' as enrolmentStatusReasonId "
<<<<<<< HEAD
				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as mostRecentRegistrationDate"
=======
				+ " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate"
>>>>>>> 7ead8325ae3e4619d20e1713b01dc7fd93e4588f
				+ " , '' as certificateNumber "
				+ " , '' as filler03 "
				+ " , '' as filler04 "
				+ " , '' as filler05 "
				+ " , '' as filler06 "
				+ " , et.setmis_code as economicStatusId "
				+ " , '' as filler07 "
				+ " , c.levy_number as sDLNo "
				+ " , '' as filler08 "
				+ " , '' as filler09 "
				+ " , '' as filler10 "
				+ " , '' as filler11 "
				+ " , '' as cumulativeSpending "
				+ " , c.company_site_number as siteNo "
				+ " , '' as practicalProviderCode "
				+ " , '' as practicalProviderETQEId "
				+ " , f.setmis_code as fundingId "
				+ " , ofo.setmis_code as oFOCode "
				+ " , ur.setmis_code as urbanRuralId "
				+ " , it.setmis_code as learningProgrammeTypeId "
				+ " , CURDATE() as dateStamp "
				+ " from company_learners cl "
				+ " inner join users u on u.id = cl.user_id"
				+ " inner join skills_program spro on spro.id = cl.skills_set_id"
				+ " inner join saqa_qualification sq on sq.id = spro.qualification_id and qualificationtypeid <> 554"
				+ " inner join intervention_type it on it.id = cl.intervention_type_id "
				+ " inner join company c on c.id = cl.company_id"
				+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ " left join etqa on etqa.id = c.etqa_id "
				+ " inner join employment_type et on et.employment_status = u.employment_status "
				+ " left join funding f on f.id = cl.funding"
				+ " left join ofo on ofo.id = cl.ofo_codes_id "
				+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ " where cl.qualification_id is null and cl.skills_program_id is not null and cl.skills_set_id is null and cl.learnership_id is null";
		return (List<SETMISFile501Bean>) super.nativeSelectSqlList(sql, SETMISFile501Bean.class);
	}
	
	 public int extractSetmisFile501Insert() throws Exception {
<<<<<<< HEAD
	        String sql = " INSERT INTO setmis_file_501 ( "
	        		+ " national_id, "
	        		 +" person_alternate_id, "
	        		 +" alternative_id_type, "
	        		 +" qualification_id, "
	        		 +" enrolment_status_id, "
	        		 +" assessor_registration_number, "
	        		 +" enrolment_type_id, "
	        		 +" enrolment_status_date, "
	        		 +" enrolment_date, "
	        		 +" filler_01, "
	        		 +" part_of_id, "
	        		 +" learnership_id, "
	        		 +" provider_code, "
	        		 +" provider_etqe_id, "
	        		 +" filler_02, "
	        		 +" enrolment_status_reason_id, "
	        		 +" most_recent_registration_date, "
	        		 +" certificate_number, "
	        		 +" filler_03, "
	        		 +" filler_04, "
	        		 +" filler_05, "
	        		 +" filler_06, "
	        		 +" economic_status_id, "
	        		 +" filler_07, "
	        		 +" sdl_no, "
	        		 +" filler_08, "
	        		 +" filler_09, "
	        		 +" filler_10, "
	        		 +" filler_11, "
	        		 +" site_no, "
	        		 +" practical_provider_code, "
	        		 +" practical_provider_etqe_id, "
	        		 +" funding_id, "
	        		 +" cumulative_spending, "
	        		 +" ofo_code, "
	        		 +" urban_rural_id, "
	        		 +" learning_programme_type_id, "
	        		 +" date_stamp ) "
	        		+ " select u.rsa_id_number as nationalId "
	 				+ " , u.passport_number as personAlternateId "
	 				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
	 				+ " , sq.qualificationid as qualificationId "
	 				+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId "
	 				+ " , '' as assessorRegistrationNumber "
	 				+ " , '7' as enrolmentTypeId "
	 				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate "
	 				+ " , cl.registered_date as enrolmentDate "
	 				+ " , '' as filler01 "
	 				+ " , '2' as partOfId "
	 				+ " , '' as learnershipId "
	 				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
	 				+ " , etqa.setmis_code as providerETQEId "
	 				+ " , '' as assessorETQEId "
	 				+ " , '' as filler02 "
	 				+ " , '' as enrolmentStatusReasonId "
	 				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as mostRecentRegistrationDate"
	 				+ " , '' as certificateNumber "
	 				+ " , '' as filler03 "
	 				+ " , '' as filler04 "
	 				+ " , '' as filler05 "
	 				+ " , '' as filler06 "
	 				+ " , et.setmis_code as economicStatusId "
	 				+ " , '' as filler07 "
	 				+ " , c.levy_number as sDLNo "
	 				+ " , '' as filler08 "
	 				+ " , '' as filler09 "
	 				+ " , '' as filler10 "
	 				+ " , '' as filler11 "
	 				+ " , c.company_site_number as siteNo "
	 				+ " , '' as practicalProviderCode "
	 				+ " , '' as practicalProviderETQEId "
	 				+ " , f.setmis_code as fundingId "
	 				+ " , '' as cumulativeSpending "
	 				+ " , ofo.setmis_code as oFOCode "
	 				+ " , ur.setmis_code as urbanRuralId "
	 				+ " , it.setmis_code as learningProgrammeTypeId "
	 				+ " , CURDATE() as dateStamp "
	 				+ " from company_learners cl "
	 				+ " inner join users u on u.id = cl.user_id"
	 				+ " inner join saqa_qualification sq on sq.id = cl.qualification_id and qualificationtypeid <> 554"
	 				+ " inner join intervention_type it on it.id = cl.intervention_type_id "
	 				+ " inner join company c on c.id = cl.company_id"
	 				+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
	 				+ " left join etqa on etqa.id = c.etqa_id "
	 				+ " inner join employment_type et on et.employment_status = u.employment_status "
	 				+ " left join funding f on f.id = cl.funding"
	 				+ " left join ofo on ofo.id = cl.ofo_codes_id "
	 				+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
	 				+ " UNION ALL"
	 				+ " select u.rsa_id_number as nationalId "
	 				+ " , u.passport_number as personAlternateId "
	 				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
	 				+ " , sq.qualificationid as qualificationId "
	 				+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId "
	 				+ " , '' as assessorRegistrationNumber "
	 				+ " , '7' as enrolmentTypeId "
	 				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate "
	 				+ " , cl.registered_date as enrolmentDate "
	 				+ " , '' as filler01 "
	 				+ " , '2' as partOfId "
	 				+ " , '' as learnershipId "
	 				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
	 				+ " , etqa.setmis_code as providerETQEId "
	 				+ " , '' as assessorETQEId "
	 				+ " , '' as filler02 "
	 				+ " , '' as enrolmentStatusReasonId "
	 				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as mostRecentRegistrationDate"
	 				+ " , '' as certificateNumber "
	 				+ " , '' as filler03 "
	 				+ " , '' as filler04 "
	 				+ " , '' as filler05 "
	 				+ " , '' as filler06 "
	 				+ " , et.setmis_code as economicStatusId "
	 				+ " , '' as filler07 "
	 				+ " , c.levy_number as sDLNo "
	 				+ " , '' as filler08 "
	 				+ " , '' as filler09 "
	 				+ " , '' as filler10 "
	 				+ " , '' as filler11 "
	 				+ " , '' as cumulativeSpending "
	 				+ " , c.company_site_number as siteNo "
	 				+ " , CONCAT('MERSETA-' , tpat.`accreditation_number`) as practicalProviderCode "
	 				+ " , etqt.setmis_code as practicalProviderETQEId "
	 				+ " , f.setmis_code as fundingId "
	 				+ " , ofo.setmis_code as oFOCode "
	 				+ " , ur.setmis_code as urbanRuralId "
	 				+ " , it.setmis_code as learningProgrammeTypeId "
	 				+ " , CURDATE() as dateStamp "
	 				+ " from company_learners cl "
	 				+ " inner join users u on u.id = cl.user_id"
	 				+ " inner join saqa_qualification sq on sq.id = cl.qualification_id and qualificationtypeid = 554"
	 				+ " inner join intervention_type it on it.id = cl.intervention_type_id "
	 				+ " inner join company c on c.id = cl.company_id"
	 				+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
	 				+ " left join etqa on etqa.id = c.etqa_id "
	 				+ " inner join employment_type et on et.employment_status = u.employment_status "
	 				+ " left join funding f on f.id = cl.funding"
	 				+ " left join ofo on ofo.id = cl.ofo_codes_id "
	 				+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
	 				+ " inner join company_learners_trade_test cltt on cltt.company_learners_id = cl.id"
	 				+ " inner join company ct on ct.id = cltt.`preferred_training_center_id`"
	 				+ " inner join training_provider_application tpat on tpat.company_id = ct.id and tpat.`accreditation_number` is not null"
	 				+ " left join etqa etqt on etqt.id = ct.etqa_id "
	 				+ " UNION ALL"
	 				+ " select u.rsa_id_number as nationalId "
	 				+ " , u.passport_number as personAlternateId "
	 				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
	 				+ " , sq.qualificationid as qualificationId "
	 				+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId "
	 				+ " , '' as assessorRegistrationNumber "
	 				+ " , '7' as enrolmentTypeId "
	 				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate "
	 				+ " , cl.registered_date as enrolmentDate "
	 				+ " , '' as filler01 "
	 				+ " , '3' as partOfId "
	 				+ " , lship.code as learnershipId "
	 				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
	 				+ " , etqa.setmis_code as providerETQEId "
	 				+ " , '' as assessorETQEId "
	 				+ " , '' as filler02 "
	 				+ " , '' as enrolmentStatusReasonId "
	 				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as mostRecentRegistrationDate"
	 				+ " , '' as certificateNumber "
	 				+ " , '' as filler03 "
	 				+ " , '' as filler04 "
	 				+ " , '' as filler05 "
	 				+ " , '' as filler06 "
	 				+ " , et.setmis_code as economicStatusId "
	 				+ " , '' as filler07 "
	 				+ " , c.levy_number as sDLNo "
	 				+ " , '' as filler08 "
	 				+ " , '' as filler09 "
	 				+ " , '' as filler10 "
	 				+ " , '' as filler11 "
	 				+ " , '' as cumulativeSpending "
	 				+ " , c.company_site_number as siteNo "
	 				+ " , '' as practicalProviderCode "
	 				+ " , '' as practicalProviderETQEId "
	 				+ " , f.setmis_code as fundingId "
	 				+ " , ofo.setmis_code as oFOCode "
	 				+ " , ur.setmis_code as urbanRuralId "
	 				+ " , it.setmis_code as learningProgrammeTypeId "
	 				+ " , CURDATE() as dateStamp "
	 				+ " from company_learners cl "
	 				+ " inner join users u on u.id = cl.user_id"
	 				+ " inner join learnership lship on lship.id = cl.learnership_id"
	 				+ " inner join saqa_qualification sq on sq.id = lship.qualification_id and qualificationtypeid <> 554"
	 				+ " inner join intervention_type it on it.id = cl.intervention_type_id "
	 				+ " inner join company c on c.id = cl.company_id"
	 				+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
	 				+ " left join etqa on etqa.id = c.etqa_id "
	 				+ " inner join employment_type et on et.employment_status = u.employment_status "
	 				+ " left join funding f on f.id = cl.funding"
	 				+ " left join ofo on ofo.id = cl.ofo_codes_id "
	 				+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
	 				+ " where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is null and cl.learnership_id is not null"
	 				+ " UNION ALL"
	 				+ " select u.rsa_id_number as nationalId "
	 				+ " , u.passport_number as personAlternateId "
	 				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
	 				+ " , sq.qualificationid as qualificationId "
	 				+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId "
	 				+ " , '' as assessorRegistrationNumber "
	 				+ " , '7' as enrolmentTypeId "
	 				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate "
	 				+ " , cl.registered_date as enrolmentDate "
	 				+ " , '' as filler01 "
	 				+ " , '5' as partOfId "
	 				+ " , '' as learnershipId "
	 				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
	 				+ " , etqa.setmis_code as providerETQEId "
	 				+ " , '' as assessorETQEId "
	 				+ " , '' as filler02 "
	 				+ " , '' as enrolmentStatusReasonId "
	 				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as mostRecentRegistrationDate"
	 				+ " , '' as certificateNumber "
	 				+ " , '' as filler03 "
	 				+ " , '' as filler04 "
	 				+ " , '' as filler05 "
	 				+ " , '' as filler06 "
	 				+ " , et.setmis_code as economicStatusId "
	 				+ " , '' as filler07 "
	 				+ " , c.levy_number as sDLNo "
	 				+ " , '' as filler08 "
	 				+ " , '' as filler09 "
	 				+ " , '' as filler10 "
	 				+ " , '' as filler11 "
	 				+ " , '' as cumulativeSpending "
	 				+ " , c.company_site_number as siteNo "
	 				+ " , '' as practicalProviderCode "
	 				+ " , '' as practicalProviderETQEId "
	 				+ " , f.setmis_code as fundingId "
	 				+ " , ofo.setmis_code as oFOCode "
	 				+ " , ur.setmis_code as urbanRuralId "
	 				+ " , it.setmis_code as learningProgrammeTypeId "
	 				+ " , CURDATE() as dateStamp "
	 				+ " from company_learners cl "
	 				+ " inner join users u on u.id = cl.user_id"
	 				+ " inner join skills_set sset on sset.id = cl.skills_set_id"
	 				+ " inner join saqa_qualification sq on sq.id = sset.qualification_id and qualificationtypeid <> 554"
	 				+ " inner join intervention_type it on it.id = cl.intervention_type_id "
	 				+ " inner join company c on c.id = cl.company_id"
	 				+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
	 				+ " left join etqa on etqa.id = c.etqa_id "
	 				+ " inner join employment_type et on et.employment_status = u.employment_status "
	 				+ " left join funding f on f.id = cl.funding"
	 				+ " left join ofo on ofo.id = cl.ofo_codes_id "
	 				+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
	 				+ " where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is not null and cl.learnership_id is null"
	 				+ " UNION ALL"
	 				+ " select u.rsa_id_number as nationalId "
	 				+ " , u.passport_number as personAlternateId "
	 				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
	 				+ " , sq.qualificationid as qualificationId "
	 				+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId "
	 				+ " , '' as assessorRegistrationNumber "
	 				+ " , '7' as enrolmentTypeId "
	 				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate "
	 				+ " , cl.registered_date as enrolmentDate "
	 				+ " , '' as filler01 "
	 				+ " , '5' as partOfId "
	 				+ " , '' as learnershipId "
	 				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
	 				+ " , etqa.setmis_code as providerETQEId "
	 				+ " , '' as assessorETQEId "
	 				+ " , '' as filler02 "
	 				+ " , '' as enrolmentStatusReasonId "
	 				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as mostRecentRegistrationDate"
	 				+ " , '' as certificateNumber "
	 				+ " , '' as filler03 "
	 				+ " , '' as filler04 "
	 				+ " , '' as filler05 "
	 				+ " , '' as filler06 "
	 				+ " , et.setmis_code as economicStatusId "
	 				+ " , '' as filler07 "
	 				+ " , c.levy_number as sDLNo "
	 				+ " , '' as filler08 "
	 				+ " , '' as filler09 "
	 				+ " , '' as filler10 "
	 				+ " , '' as filler11 "
	 				+ " , '' as cumulativeSpending "
	 				+ " , c.company_site_number as siteNo "
	 				+ " , '' as practicalProviderCode "
	 				+ " , '' as practicalProviderETQEId "
	 				+ " , f.setmis_code as fundingId "
	 				+ " , ofo.setmis_code as oFOCode "
	 				+ " , ur.setmis_code as urbanRuralId "
	 				+ " , it.setmis_code as learningProgrammeTypeId "
	 				+ " , CURDATE() as dateStamp "
	 				+ " from company_learners cl "
	 				+ " inner join users u on u.id = cl.user_id"
	 				+ " inner join skills_program spro on spro.id = cl.skills_set_id"
	 				+ " inner join saqa_qualification sq on sq.id = spro.qualification_id and qualificationtypeid <> 554"
	 				+ " inner join intervention_type it on it.id = cl.intervention_type_id "
	 				+ " inner join company c on c.id = cl.company_id"
	 				+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
	 				+ " left join etqa on etqa.id = c.etqa_id "
	 				+ " inner join employment_type et on et.employment_status = u.employment_status "
	 				+ " left join funding f on f.id = cl.funding"
	 				+ " left join ofo on ofo.id = cl.ofo_codes_id "
	 				+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
	 				+ " where cl.qualification_id is null and cl.skills_program_id is not null and cl.skills_set_id is null and cl.learnership_id is null";
=======
	        String sql = " INSERT INTO setmis_file_501 ( national_id, "
	                + " person_alternate_id, "
	                + " alternative_id_type, "
	                + " qualification_id, "
	                + " enrolment_status_id, "
	                + " assessor_registration_number, "
	                + " enrolment_type_id, "
	                + " enrolment_status_date, "
	                + " enrolment_date, "
	                + " filler_01, "
	                + " part_of_id, "
	                + " learnership_id, "
	                + " provider_code, "
	                + " provider_etqe_id, "
	                + " assessor_etqe_id, "
	                + " filler_02, "
	                + " enrolment_status_reason_id, "
	                + " most_recent_registration_date, "
	                + " certificate_number, "
	                + " filler_03, "
	                + " filler_04, "
	                + " filler_05, "
	                + " filler_06, "
	                + " economic_status_id, "
	                + " filler_07, "
	                + " sdl_no, "
	                + " filler_08, "
	                + " filler_09, "
	                + " filler_10, "
	                + " filler_11, "
	                + " site_no, "
	                + " practical_provider_code, "
	                + " practical_provider_etqe_id, "
	                + " funding_id, "
	                + " cumulative_spending, "
	                + " ofo_code, "
	                + " urban_rural_id, "
	                + " learning_programme_type_id, "
	                + " date_stamp ) "
	                + " select u.rsa_id_number as nationalId  "
	                + " , u.passport_number as personAlternateId  "
	                + " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType  "
	                + " , sq.qualificationid as qualificationId  "
	                + " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId  "
	                + " , '' as assessorRegistrationNumber  "
	                + " , '7' as enrolmentTypeId  "
	                + " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate  "
	                + " , cl.registered_date as enrolmentDate  "
	                + " , '' as filler01  "
	                + " , '2' as partOfId  "
	                + " , '' as learnershipId  "
	                + " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode  "
	                + " , etqa.setmis_code as providerETQEId  "
	                + " , '' as assessorETQEId  "
	                + " , '' as filler02  "
	                + " , '' as enrolmentStatusReasonId  "
	                + " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate "
	                + " , '' as certificateNumber  "
	                + " , '' as filler03  "
	                + " , '' as filler04  "
	                + " , '' as filler05  "
	                + " , '' as filler06  "
	                + " , et.setmis_code as economicStatusId  "
	                + " , '' as filler07  "
	                + " , c.levy_number as sDLNo  "
	                + " , '' as filler08  "
	                + " , '' as filler09  "
	                + " , '' as filler10  "
	                + " , '' as filler11  "
	                + " , c.company_site_number as siteNo  "
	                + " , '' as practicalProviderCode  "
	                + " , '' as practicalProviderETQEId  "
	                + " , f.setmis_code as fundingId  "
	                + " , '' as cumulativeSpending  "
	                + " , ofo.setmis_code as oFOCode  "
	                + " , ur.setmis_code as urbanRuralId  "
	                + " , it.setmis_code as learningProgrammeTypeId  "
	                + " , CURDATE() as dateStamp  "
	                + " from company_learners cl  "
	                + " inner join users u on u.id = cl.user_id "
	                + " inner join saqa_qualification sq on sq.id = cl.qualification_id and qualificationtypeid <> 554 "
	                + " inner join intervention_type it on it.id = cl.intervention_type_id  "
	                + " inner join company c on c.id = cl.company_id "
	                + " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null "
	                + " left join etqa on etqa.id = c.etqa_id  "
	                + " inner join employment_type et on et.employment_status = u.employment_status  "
	                + " left join funding f on f.id = cl.funding "
	                + " left join ofo on ofo.id = cl.ofo_codes_id  "
	                + " left join urbal_rural ur on ur.id = u.urban_rural_enum  "
	                + " UNION ALL "
	                + " select u.rsa_id_number as nationalId  "
	                + " , u.passport_number as personAlternateId  "
	                + " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType  "
	                + " , sq.qualificationid as qualificationId  "
	                + " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId  "
	                + " , '' as assessorRegistrationNumber  "
	                + " , '7' as enrolmentTypeId  "
	                + " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate  "
	                + " , cl.registered_date as enrolmentDate  "
	                + " , '' as filler01  "
	                + " , '2' as partOfId  "
	                + " , '' as learnershipId  "
	                + " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode  "
	                + " , etqa.setmis_code as providerETQEId  "
	                + " , '' as assessorETQEId  "
	                + " , '' as filler02  "
	                + " , '' as enrolmentStatusReasonId  "
	                + " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate "
	                + " , '' as certificateNumber  "
	                + " , '' as filler03  "
	                + " , '' as filler04  "
	                + " , '' as filler05  "
	                + " , '' as filler06  "
	                + " , et.setmis_code as economicStatusId  "
	                + " , '' as filler07  "
	                + " , c.levy_number as sDLNo  "
	                + " , '' as filler08  "
	                + " , '' as filler09  "
	                + " , '' as filler10  "
	                + " , '' as filler11  "
	                + " , '' as cumulativeSpending  "
	                + " , c.company_site_number as siteNo  "
	                + " , CONCAT('MERSETA-' , tpat.`accreditation_number`) as practicalProviderCode  "
	                + " , etqt.setmis_code as practicalProviderETQEId  "
	                + " , f.setmis_code as fundingId  "
	                + " , ofo.setmis_code as oFOCode  "
	                + " , ur.setmis_code as urbanRuralId  "
	                + " , it.setmis_code as learningProgrammeTypeId  "
	                + " , CURDATE() as dateStamp  "
	                + " from company_learners cl  "
	                + " inner join users u on u.id = cl.user_id "
	                + " inner join saqa_qualification sq on sq.id = cl.qualification_id and qualificationtypeid = 554 "
	                + " inner join intervention_type it on it.id = cl.intervention_type_id  "
	                + " inner join company c on c.id = cl.company_id "
	                + " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null "
	                + " left join etqa on etqa.id = c.etqa_id  "
	                + " inner join employment_type et on et.employment_status = u.employment_status  "
	                + " left join funding f on f.id = cl.funding "
	                + " left join ofo on ofo.id = cl.ofo_codes_id  "
	                + " left join urbal_rural ur on ur.id = u.urban_rural_enum  "
	                + " inner join company_learners_trade_test cltt on cltt.company_learners_id = cl.id "
	                + " inner join company ct on ct.id = cltt.`preferred_training_center_id` "
	                + " inner join training_provider_application tpat on tpat.company_id = ct.id and tpat.`accreditation_number` is not null "
	                + " left join etqa etqt on etqt.id = ct.etqa_id  "
	                + " UNION ALL "
	                + " select u.rsa_id_number as nationalId  "
	                + " , u.passport_number as personAlternateId  "
	                + " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType  "
	                + " , sq.qualificationid as qualificationId  "
	                + " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId  "
	                + " , '' as assessorRegistrationNumber  "
	                + " , '7' as enrolmentTypeId  "
	                + " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate  "
	                + " , cl.registered_date as enrolmentDate  "
	                + " , '' as filler01  "
	                + " , '3' as partOfId  "
	                + " , lship.code as learnershipId  "
	                + " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode  "
	                + " , etqa.setmis_code as providerETQEId  "
	                + " , '' as assessorETQEId  "
	                + " , '' as filler02  "
	                + " , '' as enrolmentStatusReasonId  "
	                + " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate "
	                + " , '' as certificateNumber  "
	                + " , '' as filler03  "
	                + " , '' as filler04  "
	                + " , '' as filler05  "
	                + " , '' as filler06  "
	                + " , et.setmis_code as economicStatusId  "
	                + " , '' as filler07  "
	                + " , c.levy_number as sDLNo  "
	                + " , '' as filler08  "
	                + " , '' as filler09  "
	                + " , '' as filler10  "
	                + " , '' as filler11  "
	                + " , '' as cumulativeSpending  "
	                + " , c.company_site_number as siteNo  "
	                + " , '' as practicalProviderCode  "
	                + " , '' as practicalProviderETQEId  "
	                + " , f.setmis_code as fundingId  "
	                + " , ofo.setmis_code as oFOCode  "
	                + " , ur.setmis_code as urbanRuralId  "
	                + " , it.setmis_code as learningProgrammeTypeId  "
	                + " , CURDATE() as dateStamp  "
	                + " from company_learners cl  "
	                + " inner join users u on u.id = cl.user_id "
	                + " inner join learnership lship on lship.id = cl.learnership_id "
	                + " inner join saqa_qualification sq on sq.id = lship.qualification_id and qualificationtypeid <> 554 "
	                + " inner join intervention_type it on it.id = cl.intervention_type_id  "
	                + " inner join company c on c.id = cl.company_id "
	                + " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null "
	                + " left join etqa on etqa.id = c.etqa_id  "
	                + " inner join employment_type et on et.employment_status = u.employment_status  "
	                + " left join funding f on f.id = cl.funding "
	                + " left join ofo on ofo.id = cl.ofo_codes_id  "
	                + " left join urbal_rural ur on ur.id = u.urban_rural_enum  "
	                + " where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is null and cl.learnership_id is not null "
	                + " UNION ALL "
	                + " select u.rsa_id_number as nationalId  "
	                + " , u.passport_number as personAlternateId  "
	                + " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType  "
	                + " , sq.qualificationid as qualificationId  "
	                + " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId  "
	                + " , '' as assessorRegistrationNumber  "
	                + " , '7' as enrolmentTypeId  "
	                + " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate  "
	                + " , cl.registered_date as enrolmentDate  "
	                + " , '' as filler01  "
	                + " , '5' as partOfId  "
	                + " , '' as learnershipId  "
	                + " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode  "
	                + " , etqa.setmis_code as providerETQEId  "
	                + " , '' as assessorETQEId  "
	                + " , '' as filler02  "
	                + " , '' as enrolmentStatusReasonId  "
	                + " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate "
	                + " , '' as certificateNumber  "
	                + " , '' as filler03  "
	                + " , '' as filler04  "
	                + " , '' as filler05  "
	                + " , '' as filler06  "
	                + " , et.setmis_code as economicStatusId  "
	                + " , '' as filler07  "
	                + " , c.levy_number as sDLNo  "
	                + " , '' as filler08  "
	                + " , '' as filler09  "
	                + " , '' as filler10  "
	                + " , '' as filler11  "
	                + " , '' as cumulativeSpending  "
	                + " , c.company_site_number as siteNo  "
	                + " , '' as practicalProviderCode  "
	                + " , '' as practicalProviderETQEId  "
	                + " , f.setmis_code as fundingId  "
	                + " , ofo.setmis_code as oFOCode  "
	                + " , ur.setmis_code as urbanRuralId  "
	                + " , it.setmis_code as learningProgrammeTypeId  "
	                + " , CURDATE() as dateStamp  "
	                + " from company_learners cl  "
	                + " inner join users u on u.id = cl.user_id "
	                + " inner join skills_set sset on sset.id = cl.skills_set_id "
	                + " inner join saqa_qualification sq on sq.id = sset.qualification_id and qualificationtypeid <> 554 "
	                + " inner join intervention_type it on it.id = cl.intervention_type_id  "
	                + " inner join company c on c.id = cl.company_id "
	                + " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null "
	                + " left join etqa on etqa.id = c.etqa_id  "
	                + " inner join employment_type et on et.employment_status = u.employment_status  "
	                + " left join funding f on f.id = cl.funding "
	                + " left join ofo on ofo.id = cl.ofo_codes_id  "
	                + " left join urbal_rural ur on ur.id = u.urban_rural_enum  "
	                + " where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is not null and cl.learnership_id is null "
	                + " UNION ALL "
	                + " select u.rsa_id_number as nationalId  "
	                + " , u.passport_number as personAlternateId  "
	                + " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType  "
	                + " , sq.qualificationid as qualificationId  "
	                + " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId  "
	                + " , '' as assessorRegistrationNumber  "
	                + " , '7' as enrolmentTypeId  "
	                + " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate  "
	                + " , cl.registered_date as enrolmentDate  "
	                + " , '' as filler01  "
	                + " , '5' as partOfId  "
	                + " , '' as learnershipId  "
	                + " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode  "
	                + " , etqa.setmis_code as providerETQEId  "
	                + " , '' as assessorETQEId  "
	                + " , '' as filler02  "
	                + " , '' as enrolmentStatusReasonId  "
	                + " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate "
	                + " , '' as certificateNumber  "
	                + " , '' as filler03  "
	                + " , '' as filler04  "
	                + " , '' as filler05  "
	                + " , '' as filler06  "
	                + " , et.setmis_code as economicStatusId  "
	                + " , '' as filler07  "
	                + " , c.levy_number as sDLNo  "
	                + " , '' as filler08  "
	                + " , '' as filler09  "
	                + " , '' as filler10  "
	                + " , '' as filler11  "
	                + " , '' as cumulativeSpending  "
	                + " , c.company_site_number as siteNo  "
	                + " , '' as practicalProviderCode  "
	                + " , '' as practicalProviderETQEId  "
	                + " , f.setmis_code as fundingId  "
	                + " , ofo.setmis_code as oFOCode  "
	                + " , ur.setmis_code as urbanRuralId  "
	                + " , it.setmis_code as learningProgrammeTypeId  "
	                + " , CURDATE() as dateStamp  "
	                + " from company_learners cl  "
	                + " inner join users u on u.id = cl.user_id "
	                + " inner join skills_program spro on spro.id = cl.skills_set_id "
	                + " inner join saqa_qualification sq on sq.id = spro.qualification_id and qualificationtypeid <> 554 "
	                + " inner join intervention_type it on it.id = cl.intervention_type_id  "
	                + " inner join company c on c.id = cl.company_id "
	                + " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null "
	                + " left join etqa on etqa.id = c.etqa_id  "
	                + " inner join employment_type et on et.employment_status = u.employment_status  "
	                + " left join funding f on f.id = cl.funding "
	                + " left join ofo on ofo.id = cl.ofo_codes_id  "
	                + " left join urbal_rural ur on ur.id = u.urban_rural_enum  "
	                + " where cl.qualification_id is null and cl.skills_program_id is not null and cl.skills_set_id is null and cl.learnership_id is null ";
>>>>>>> 7ead8325ae3e4619d20e1713b01dc7fd93e4588f
	        return (int) super.nativeSQLInsert(sql);
	    }
	    
	    @SuppressWarnings("unchecked")
	    public List<SetmisFile501> allSetmisFile501() throws Exception {
	        return (List<SetmisFile501>)super.getList("select o from SetmisFile501 o");
	    }

	public List<SETMISFile502Bean> extractSETMISFile502Bean() throws Exception {
		String sql = " select u.rsa_id_number as nationalId "
				+ " , u.passport_number as personAlternateId "
				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ " , sset.programme_id as NonNQFIntervCode"
				+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId"
				+ " , '' as assessorRegistrationNumber"
				+ " , '7' as enrolmentTypeId "
				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate "
				+ " , cl.registered_date as enrolmentDate"
				+ " , '5' as partOfId "
				+ " , sq.qualificationid as qualificationId "
				+ " , '' as learnershipId"
				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode"
				+ " , etqa.setmis_code as providerETQEId"
				+ " , '' as assessorETQEId "
				+ " , '' as enrolmentStatusReasonId"
				+ " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate"
				+ " , et.setmis_code as economicStatusId "
				+ " , f.setmis_code as fundingId "
				+ " , '' as cumulativeSpending"
				+ " , ofo.setmis_code as oFOCode "
				+ " , c.levy_number as sDLNo"
				+ " , c.company_site_number as siteNo"
				+ " , e.setmis_code as nonNQFIntervETQEId"
				+ " , ur.setmis_code as urbanRuralId "
				+ " , CURDATE() as dateStamp "
				+ " from company_learners cl "
				+ " inner join users u on u.id = cl.user_id"
				+ " inner join skills_set sset on sset.id = cl.skills_set_id"
				+ " inner join saqa_qualification sq on sq.id = sset.qualification_id and qualificationtypeid <> 554"
				+ " inner join intervention_type it on it.id = cl.intervention_type_id "
				+ " inner join company c on c.id = cl.company_id"
				+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ " left join etqa on etqa.id = c.etqa_id "
				+ " inner join employment_type et on et.employment_status = u.employment_status "
				+ " left join funding f on f.id = cl.funding"
				+ " left join ofo on ofo.id = cl.ofo_codes_id "
				+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ " inner join subfield sbf on sbf.id = sq.sub_field_id"
				+ " inner join etqa e on e.id = sset.netqa_id"
				+ " where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is not null and cl.learnership_id is null"
				+ " UNION ALL"
				+ " select u.rsa_id_number as nationalId "
				+ " , u.passport_number as personAlternateId "
				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ " , spro.programme_id as NonNQFIntervCode"
				+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId"
				+ " , '' as assessorRegistrationNumber"
				+ " , '7' as enrolmentTypeId "
				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate "
				+ " , cl.registered_date as enrolmentDate"
				+ " , '5' as partOfId "
				+ " , sq.qualificationid as qualificationId "
				+ " , '' as learnershipId"
				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode"
				+ " , etqa.setmis_code as providerETQEId"
				+ " , '' as assessorETQEId "
				+ " , '' as enrolmentStatusReasonId"
				+ " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate"
				+ " , et.setmis_code as economicStatusId "
				+ " , f.setmis_code as fundingId "
				+ " , '' as cumulativeSpending"
				+ " , ofo.setmis_code as oFOCode "
				+ " , c.levy_number as sDLNo"
				+ " , c.company_site_number as siteNo"
				+ " , e.setmis_code as nonNQFIntervETQEId"
				+ " , ur.setmis_code as urbanRuralId "
				+ " , CURDATE() as dateStamp "
				+ " from company_learners cl "
				+ " inner join users u on u.id = cl.user_id"
				+ " inner join skills_program spro on spro.id = cl.skills_set_id"
				+ " inner join saqa_qualification sq on sq.id = spro.qualification_id and qualificationtypeid <> 554"
				+ " inner join intervention_type it on it.id = cl.intervention_type_id "
				+ " inner join company c on c.id = cl.company_id"
				+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ " left join etqa on etqa.id = c.etqa_id "
				+ " inner join employment_type et on et.employment_status = u.employment_status "
				+ " left join funding f on f.id = cl.funding"
				+ " left join ofo on ofo.id = cl.ofo_codes_id "
				+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ " inner join subfield sbf on sbf.id = sq.sub_field_id"
				+ " inner join etqa e on e.id = spro.netqa_id"
				+ " where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is not null and cl.learnership_id is null ";
		return (List<SETMISFile502Bean>) super.nativeSelectSqlList(sql, SETMISFile502Bean.class);
	}
	
	 public int extractSetmisFile502Insert() throws Exception {
	        String sql = " INSERT INTO setmis_file_502 ( national_id, "
	                + " person_alternate_id, "
	                + " alternative_id_type, "
	                + " non_nqf_intervention_code, "
	                + " enrolment_status_id, "
	                + " assessor_registration_number, "
	                + " enrolment_type_id, "
	                + " enrolment_status_date, "
	                + " enrolment_date, "
	                + " part_of_id, "
	                + " qualification_id, "
	                + " learnership_id, "
	                + " provider_code, "
	                + " provider_etqe_id, "
	                + " assessor_etqe_id, "
	                + " enrolment_status_reason_id, "
	                + " most_recent_registration_date, "
	                + " economic_status_id, "
	                + " funding_id, "
	                + " cumulative_spending, "
	                + " ofo_code, "
	                + " sdl_no, "
	                + " site_no, "
	                + " non_nqf_interv_etqe_id, "
	                + " urban_rural_id, "
	                + " date_stamp ) "
	                + " select u.rsa_id_number as nationalId "
					+ " , u.passport_number as personAlternateId "
					+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
					+ " , sset.programme_id as NonNQFIntervCode"
					+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId"
					+ " , '' as assessorRegistrationNumber"
					+ " , '7' as enrolmentTypeId "
					+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate "
					+ " , cl.registered_date as enrolmentDate"
					+ " , '5' as partOfId "
					+ " , sq.qualificationid as qualificationId "
					+ " , '' as learnershipId"
					+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode"
					+ " , etqa.setmis_code as providerETQEId"
					+ " , '' as assessorETQEId "
					+ " , '' as enrolmentStatusReasonId"
					+ " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate"
					+ " , et.setmis_code as economicStatusId "
					+ " , f.setmis_code as fundingId "
					+ " , '' as cumulativeSpending"
					+ " , ofo.setmis_code as oFOCode "
					+ " , c.levy_number as sDLNo"
					+ " , c.company_site_number as siteNo"
					+ " , e.setmis_code as nonNQFIntervETQEId"
					+ " , ur.setmis_code as urbanRuralId "
					+ " , CURDATE() as dateStamp "
					+ " from company_learners cl "
					+ " inner join users u on u.id = cl.user_id"
					+ " inner join skills_set sset on sset.id = cl.skills_set_id"
					+ " inner join saqa_qualification sq on sq.id = sset.qualification_id and qualificationtypeid <> 554"
					+ " inner join intervention_type it on it.id = cl.intervention_type_id "
					+ " inner join company c on c.id = cl.company_id"
					+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
					+ " left join etqa on etqa.id = c.etqa_id "
					+ " inner join employment_type et on et.employment_status = u.employment_status "
					+ " left join funding f on f.id = cl.funding"
					+ " left join ofo on ofo.id = cl.ofo_codes_id "
					+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
					+ " inner join subfield sbf on sbf.id = sq.sub_field_id"
					+ " inner join etqa e on e.id = sset.netqa_id"
					+ " where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is not null and cl.learnership_id is null"
					+ " UNION ALL"
					+ " select u.rsa_id_number as nationalId "
					+ " , u.passport_number as personAlternateId "
					+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
					+ " , spro.programme_id as NonNQFIntervCode"
					+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId"
					+ " , '' as assessorRegistrationNumber"
					+ " , '7' as enrolmentTypeId "
					+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate "
					+ " , cl.registered_date as enrolmentDate"
					+ " , '5' as partOfId "
					+ " , sq.qualificationid as qualificationId "
					+ " , '' as learnershipId"
					+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode"
					+ " , etqa.setmis_code as providerETQEId"
					+ " , '' as assessorETQEId "
					+ " , '' as enrolmentStatusReasonId"
					+ " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate"
					+ " , et.setmis_code as economicStatusId "
					+ " , f.setmis_code as fundingId "
					+ " , '' as cumulativeSpending"
					+ " , ofo.setmis_code as oFOCode "
					+ " , c.levy_number as sDLNo"
					+ " , c.company_site_number as siteNo"
					+ " , e.setmis_code as nonNQFIntervETQEId"
					+ " , ur.setmis_code as urbanRuralId "
					+ " , CURDATE() as dateStamp "
					+ " from company_learners cl "
					+ " inner join users u on u.id = cl.user_id"
					+ " inner join skills_program spro on spro.id = cl.skills_set_id"
					+ " inner join saqa_qualification sq on sq.id = spro.qualification_id and qualificationtypeid <> 554"
					+ " inner join intervention_type it on it.id = cl.intervention_type_id "
					+ " inner join company c on c.id = cl.company_id"
					+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
					+ " left join etqa on etqa.id = c.etqa_id "
					+ " inner join employment_type et on et.employment_status = u.employment_status "
					+ " left join funding f on f.id = cl.funding"
					+ " left join ofo on ofo.id = cl.ofo_codes_id "
					+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
					+ " inner join subfield sbf on sbf.id = sq.sub_field_id"
					+ " inner join etqa e on e.id = spro.netqa_id"
					+ " where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is not null and cl.learnership_id is null ";
	        return (int) super.nativeSQLInsert(sql);
	    }
	    
	    @SuppressWarnings("unchecked")
	    public List<SetmisFile502> allSetmisFile502() throws Exception {
	        return (List<SetmisFile502>)super.getList("select o from SetmisFile502 o");
	    }

	public List<SETMISFile503Bean> extractSETMISFile503Bean() throws Exception {
		String sql = " select u.rsa_id_number as nationalId "
				+ " , u.passport_number as personAlternateId "
				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ " , su.unitstandardid as unitStandardId "
				+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId "
				+ " , '' as assessorRegistrationNumber "
				+ " , '7' as enrolmentTypeId "
				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate "
				+ " , cl.registered_date as enrolmentDate "
				+ " , '' as filler01 "
				+ " , '2' as partOf "
				+ " , sq.qualificationid as qualificationId "
				+ " , '' as learnershipId "
				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
				+ " , etqa.setmis_code as providerETQEId "
				+ " , '' as assessorETQEId "
				+ " , '' as filler02 "
				+ " , '' as filler03 "
				+ " , '' as enrolmentStatusReasonId "
				+ " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate"
				+ " , '' as filler04 "
				+ " , '' as filler05 "
				+ " , '' as filler06 "
				+ " , et.setmis_code as economicStatusId "
				+ " , '' as filler07 "
				+ " , '' as filler08 "
				+ " , '' as filler09 "
				+ " , '' as cumulativeSpend"
				+ " , '' as certificateNumber "
				+ " , f.setmis_code as fundingId "
				+ " , ofo.setmis_code as oFOCode "
				+ " , c.levy_number as sDLNo"
				+ " , c.company_site_number as siteNo"
				+ " , '' as nonNQFIntervCode  "
				+ " , '' as nonNQFIntervETQEId  "
				+ " , ur.setmis_code as urbanRuralId "
				+ " , CURDATE() as dateStamp"
				+ "  from company_learners cl "
				+ " inner join users u on u.id = cl.user_id"
				+ " inner join saqa_qualification sq on sq.id = cl.qualification_id and qualificationtypeid <> 554"
				+ " inner join intervention_type it on it.id = cl.intervention_type_id "
				+ " inner join company c on c.id = cl.company_id"
				+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ " left join etqa on etqa.id = c.etqa_id "
				+ " inner join employment_type et on et.employment_status = u.employment_status "
				+ " left join funding f on f.id = cl.funding"
				+ " left join ofo on ofo.id = cl.ofo_codes_id "
				+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ " inner join summative_assessment_report sar on sar.company_learners_id = cl.id"
				+ " inner join summative_assessment_report_unit_standards sarus on sarus.summative_assessment_report_id = sar.id"
				+ " inner join saqa_unitstandard su on su.id = sarus.unit_standards_id"
				+ " UNION ALL "
				+ " select u.rsa_id_number as nationalId "
				+ " , u.passport_number as personAlternateId "
				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ " , su.unitstandardid as unitStandardId "
				+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId "
				+ " , '' as assessorRegistrationNumber "
				+ " , '7' as enrolmentTypeId "
				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate "
				+ " , cl.registered_date as enrolmentDate "
				+ " , '' as filler01  "
				+ " , '2' as partOf "
				+ " , sq.qualificationid as qualificationId "
				+ " , '' as learnershipId "
				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
				+ " , etqa.setmis_code as providerETQEId "
				+ " , '' as assessorETQEId "
				+ " , '' as filler02 "
				+ " , '' as filler03 "
				+ " , '' as enrolmentStatusReasonId "
				+ " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate"
				+ " , '' as filler04 "
				+ " , '' as filler05 "
				+ " , '' as filler06 "
				+ " , et.setmis_code as economicStatusId "
				+ " , '' as filler07 "
				+ " , '' as filler08 "
				+ " , '' as filler09 "
				+ " , '' as cumulativeSpend"
				+ " , '' as certificateNumber "
				+ " , f.setmis_code as fundingId "
				+ " , ofo.setmis_code as oFOCode "
				+ " , c.levy_number as sDLNo"
				+ " , c.company_site_number as siteNo"
				+ " , '' as nonNQFIntervCode  "
				+ " , '' as nonNQFIntervETQEId  "
				+ " , ur.setmis_code as urbanRuralId "
				+ " , CURDATE() as dateStamp"
				+ " from company_learners cl "
				+ " inner join users u on u.id = cl.user_id"
				+ " inner join saqa_qualification sq on sq.id = cl.qualification_id and qualificationtypeid = 554"
				+ " inner join intervention_type it on it.id = cl.intervention_type_id "
				+ " inner join company c on c.id = cl.company_id"
				+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ " left join etqa on etqa.id = c.etqa_id "
				+ " inner join employment_type et on et.employment_status = u.employment_status "
				+ " left join funding f on f.id = cl.funding"
				+ " left join ofo on ofo.id = cl.ofo_codes_id "
				+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ " inner join company_learners_trade_test cltt on cltt.company_learners_id = cl.id"
				+ " inner join company ct on ct.id = cltt.`preferred_training_center_id`"
				+ " inner join training_provider_application tpat on tpat.company_id = ct.id and tpat.`accreditation_number` is not null"
				+ " left join etqa etqt on etqt.id = ct.etqa_id "
				+ "  inner join summative_assessment_report sar on sar.company_learners_id = cl.id"
				+ " inner join summative_assessment_report_unit_standards sarus on sarus.summative_assessment_report_id = sar.id"
				+ " inner join saqa_unitstandard su on su.id = sarus.unit_standards_id"
				+ " UNION ALL "
				+ " select u.rsa_id_number as nationalId "
				+ " , u.passport_number as personAlternateId "
				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ " , su.unitstandardid as unitStandardId "
				+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId "
				+ " , '' as assessorRegistrationNumber "
				+ " , '7' as enrolmentTypeId "
				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate "
				+ " , cl.registered_date as enrolmentDate "
				+ " , '' as filler01  "
				+ " , '3' as partOf "
				+ " , sq.qualificationid as qualificationId "
				+ " , lship.code as learnershipId "
				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
				+ " , etqa.setmis_code as providerETQEId "
				+ " , '' as assessorETQEId "
				+ " , '' as filler02 "
				+ " , '' as filler03 "
				+ " , '' as enrolmentStatusReasonId "
				+ " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate"
				+ " , '' as filler04 "
				+ " , '' as filler05 "
				+ " , '' as filler06 "
				+ " , et.setmis_code as economicStatusId "
				+ " , '' as filler07 "
				+ " , '' as filler08 "
				+ " , '' as filler09 "
				+ " , '' as cumulativeSpend"
				+ " , '' as certificateNumber "
				+ " , f.setmis_code as fundingId "
				+ " , ofo.setmis_code as oFOCode "
				+ " , c.levy_number as sDLNo"
				+ " , c.company_site_number as siteNo"
				+ " , '' as nonNQFIntervCode  "
				+ " , '' as nonNQFIntervETQEId  "
				+ " , ur.setmis_code as urbanRuralId "
				+ " , CURDATE() as dateStamp"
				+ " from company_learners cl "
				+ " inner join users u on u.id = cl.user_id"
				+ " inner join learnership lship on lship.id = cl.learnership_id"
				+ " inner join saqa_qualification sq on sq.id = lship.qualification_id and qualificationtypeid <> 554"
				+ " inner join intervention_type it on it.id = cl.intervention_type_id "
				+ " inner join company c on c.id = cl.company_id"
				+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ " left join etqa on etqa.id = c.etqa_id "
				+ " inner join employment_type et on et.employment_status = u.employment_status "
				+ " left join funding f on f.id = cl.funding"
				+ " left join ofo on ofo.id = cl.ofo_codes_id "
				+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ "  inner join summative_assessment_report sar on sar.company_learners_id = cl.id"
				+ " inner join summative_assessment_report_unit_standards sarus on sarus.summative_assessment_report_id = sar.id"
				+ " inner join saqa_unitstandard su on su.id = sarus.unit_standards_id"
				+ " where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is null and cl.learnership_id is not null"
				+ " UNION ALL "
				+ " select u.rsa_id_number as nationalId "
				+ " , u.passport_number as personAlternateId "
				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ " , su.unitstandardid as unitStandardId "
				+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId "
				+ " , '' as assessorRegistrationNumber "
				+ " , '7' as enrolmentTypeId "
				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate "
				+ " , cl.registered_date as enrolmentDate "
				+ " , '' as filler01 "
				+ " , '5' as partOf "
				+ " , sq.qualificationid as qualificationId "
				+ " , '' as learnershipId "
				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
				+ " , etqa.setmis_code as providerETQEId "
				+ " , '' as assessorETQEId "
				+ " , '' as filler02 "
				+ " , '' as filler03 "
				+ " , '' as enrolmentStatusReasonId "
				+ " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate"
				+ " , '' as filler04 "
				+ " , '' as filler05 "
				+ " , '' as filler06 "
				+ " , et.setmis_code as economicStatusId "
				+ " , '' as filler07 "
				+ " , '' as filler08 "
				+ " , '' as filler09 "
				+ " , '' as cumulativeSpend"
				+ " , '' as certificateNumber "
				+ " , f.setmis_code as fundingId "
				+ " , ofo.setmis_code as oFOCode "
				+ " , c.levy_number as sDLNo"
				+ " , c.company_site_number as siteNo"
				+ " , '' as nonNQFIntervCode "
				+ " , '' as nonNQFIntervETQEId "
				+ " , ur.setmis_code as urbanRuralId "
				+ " , CURDATE() as dateStamp"
				+ " from company_learners cl "
				+ " inner join users u on u.id = cl.user_id"
				+ " inner join skills_set sset on sset.id = cl.skills_set_id"
				+ " inner join saqa_qualification sq on sq.id = sset.qualification_id and qualificationtypeid <> 554"
				+ " inner join intervention_type it on it.id = cl.intervention_type_id "
				+ " inner join company c on c.id = cl.company_id"
				+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ " left join etqa on etqa.id = c.etqa_id "
				+ " inner join employment_type et on et.employment_status = u.employment_status "
				+ " left join funding f on f.id = cl.funding"
				+ " left join ofo on ofo.id = cl.ofo_codes_id "
				+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ "  inner join summative_assessment_report sar on sar.company_learners_id = cl.id"
				+ " inner join summative_assessment_report_unit_standards sarus on sarus.summative_assessment_report_id = sar.id"
				+ " inner join saqa_unitstandard su on su.id = sarus.unit_standards_id"
				+ " where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is not null and cl.learnership_id is null"
				+ " UNION ALL"
				+ " select u.rsa_id_number as nationalId "
				+ " , u.passport_number as personAlternateId "
				+ " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ " , su.unitstandardid as unitStandardId "
				+ " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId "
				+ " , '' as assessorRegistrationNumber "
				+ " , '7' as enrolmentTypeId "
				+ " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate "
				+ " , cl.registered_date as enrolmentDate "
				+ " , '' as filler01 "
				+ " , '5' as partOf "
				+ " , sq.qualificationid as qualificationId "
				+ " , '' as learnershipId "
				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode "
				+ " , etqa.setmis_code as providerETQEId "
				+ " , '' as assessorETQEId "
				+ " , '' as filler02 "
				+ " , '' as filler03 "
				+ " , '' as enrolmentStatusReasonId "
				+ " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate"
				+ " , '' as filler04 "
				+ " , '' as filler05 "
				+ " , '' as filler06 "
				+ " , et.setmis_code as economicStatusId "
				+ " , '' as filler07 "
				+ " , '' as filler08 "
				+ " , '' as filler09 "
				+ " , '' as cumulativeSpend"
				+ " , '' as certificateNumber "
				+ " , f.setmis_code as fundingId "
				+ " , ofo.setmis_code as oFOCode "
				+ " , c.levy_number as sDLNo"
				+ " , c.company_site_number as siteNo"
				+ " , '' as nonNQFIntervCode  "
				+ " , '' as nonNQFIntervETQEId  "
				+ " , ur.setmis_code as urbanRuralId "
				+ " , CURDATE() as dateStamp"
				+ " from company_learners cl "
				+ " inner join users u on u.id = cl.user_id"
				+ " inner join skills_program spro on spro.id = cl.skills_set_id"
				+ " inner join saqa_qualification sq on sq.id = spro.qualification_id and qualificationtypeid <> 554"
				+ " inner join intervention_type it on it.id = cl.intervention_type_id "
				+ " inner join company c on c.id = cl.company_id"
				+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ " left join etqa on etqa.id = c.etqa_id "
				+ " inner join employment_type et on et.employment_status = u.employment_status "
				+ " left join funding f on f.id = cl.funding"
				+ " left join ofo on ofo.id = cl.ofo_codes_id "
				+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ "  inner join summative_assessment_report sar on sar.company_learners_id = cl.id"
				+ " inner join summative_assessment_report_unit_standards sarus on sarus.summative_assessment_report_id = sar.id"
				+ " inner join saqa_unitstandard su on su.id = sarus.unit_standards_id"
				+ " where cl.qualification_id is null and cl.skills_program_id is not null and cl.skills_set_id is null and cl.learnership_id is null ";  
		return (List<SETMISFile503Bean>) super.nativeSelectSqlList(sql, SETMISFile503Bean.class);
	}
	
	 public int extractSetmisFile503Insert() throws Exception {
	        String sql = " INSERT INTO setmis_file_503 ( national_id, "
	                + " person_alternate_id, "
	                + " alternative_id_type, "
	                + " unit_standard_id, "
	                + " enrolment_status_id, "
	                + " assessor_registration_number, "
	                + " enrolment_type_id, "
	                + " enrolment_status_date, "
	                + " enrolment_date, "
	                + " filler_01, "
	                + " part_of_id, "
	                + " qualification_id, "
	                + " learnership_id, "
	                + " provider_code, "
	                + " provider_etqe_id, "
	                + " assessor_etqe_id, "
	                + " filler_02, "
	                + " filler_03, "
	                + " enrolment_status_reason_id, "
	                + " most_recent_registration_date, "
	                + " filler_04, "
	                + " filler_05, "
	                + " filler_06, "
	                + " economic_status_id, "
	                + " filler_07, "
	                + " filler_08, "
	                + " filler_09, "
	                + " cumulative_spend, "
	                + " certificate_number, "
	                + " funding_id, "
	                + " ofo_code, "
	                + " sdl_no, "
	                + " site_no, "
	                + " non_nqf_interv_code, "
	                + " non_nqf_intervetqe_id, "
	                + " urban_rural_id, "
	                + " date_stamp ) "
	                + " select u.rsa_id_number as nationalId  "
	                + " , u.passport_number as personAlternateId  "
	                + " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType  "
	                + " , su.unitstandardid as unitStandardId  "
	                + " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId  "
	                + " , '' as assessorRegistrationNumber  "
	                + " , '7' as enrolmentTypeId  "
	                + " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate  "
	                + " , cl.registered_date as enrolmentDate  "
	                + " , '' as filler01  "
	                + " , '2' as partOf  "
	                + " , sq.qualificationid as qualificationId  "
	                + " , '' as learnershipId  "
	                + " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode  "
	                + " , etqa.setmis_code as providerETQEId  "
	                + " , '' as assessorETQEId  "
	                + " , '' as filler02  "
	                + " , '' as filler03  "
	                + " , '' as enrolmentStatusReasonId  "
	                + " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate "
	                + " , '' as filler04  "
	                + " , '' as filler05  "
	                + " , '' as filler06  "
	                + " , et.setmis_code as economicStatusId  "
	                + " , '' as filler07  "
	                + " , '' as filler08  "
	                + " , '' as filler09  "
	                + " , '' as cumulativeSpend "
	                + " , '' as certificateNumber  "
	                + " , f.setmis_code as fundingId  "
	                + " , ofo.setmis_code as oFOCode  "
	                + " , c.levy_number as sDLNo "
	                + " , c.company_site_number as siteNo "
	                + " , '' as nonNQFIntervCode   "
	                + " , '' as nonNQFIntervETQEId   "
	                + " , ur.setmis_code as urbanRuralId  "
	                + " , CURDATE() as dateStamp "
	                + "  from company_learners cl  "
	                + " inner join users u on u.id = cl.user_id "
	                + " inner join saqa_qualification sq on sq.id = cl.qualification_id and qualificationtypeid <> 554 "
	                + " inner join intervention_type it on it.id = cl.intervention_type_id  "
	                + " inner join company c on c.id = cl.company_id "
	                + " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null "
	                + " left join etqa on etqa.id = c.etqa_id  "
	                + " inner join employment_type et on et.employment_status = u.employment_status  "
	                + " left join funding f on f.id = cl.funding "
	                + " left join ofo on ofo.id = cl.ofo_codes_id  "
	                + " left join urbal_rural ur on ur.id = u.urban_rural_enum  "
	                + " inner join summative_assessment_report sar on sar.company_learners_id = cl.id "
	                + " inner join summative_assessment_report_unit_standards sarus on sarus.summative_assessment_report_id = sar.id "
	                + " inner join saqa_unitstandard su on su.id = sarus.unit_standards_id "
	                + " UNION ALL  "
	                + " select u.rsa_id_number as nationalId  "
	                + " , u.passport_number as personAlternateId  "
	                + " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType  "
	                + " , su.unitstandardid as unitStandardId  "
	                + " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId  "
	                + " , '' as assessorRegistrationNumber  "
	                + " , '7' as enrolmentTypeId  "
	                + " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate  "
	                + " , cl.registered_date as enrolmentDate  "
	                + " , '' as filler01   "
	                + " , '2' as partOf  "
	                + " , sq.qualificationid as qualificationId  "
	                + " , '' as learnershipId  "
	                + " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode  "
	                + " , etqa.setmis_code as providerETQEId  "
	                + " , '' as assessorETQEId  "
	                + " , '' as filler02  "
	                + " , '' as filler03  "
	                + " , '' as enrolmentStatusReasonId  "
	                + " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate "
	                + " , '' as filler04  "
	                + " , '' as filler05  "
	                + " , '' as filler06  "
	                + " , et.setmis_code as economicStatusId  "
	                + " , '' as filler07  "
	                + " , '' as filler08  "
	                + " , '' as filler09  "
	                + " , '' as cumulativeSpend "
	                + " , '' as certificateNumber  "
	                + " , f.setmis_code as fundingId  "
	                + " , ofo.setmis_code as oFOCode  "
	                + " , c.levy_number as sDLNo "
	                + " , c.company_site_number as siteNo "
	                + " , '' as nonNQFIntervCode   "
	                + " , '' as nonNQFIntervETQEId   "
	                + " , ur.setmis_code as urbanRuralId  "
	                + " , CURDATE() as dateStamp "
	                + " from company_learners cl  "
	                + " inner join users u on u.id = cl.user_id "
	                + " inner join saqa_qualification sq on sq.id = cl.qualification_id and qualificationtypeid = 554 "
	                + " inner join intervention_type it on it.id = cl.intervention_type_id  "
	                + " inner join company c on c.id = cl.company_id "
	                + " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null "
	                + " left join etqa on etqa.id = c.etqa_id  "
	                + " inner join employment_type et on et.employment_status = u.employment_status  "
	                + " left join funding f on f.id = cl.funding "
	                + " left join ofo on ofo.id = cl.ofo_codes_id  "
	                + " left join urbal_rural ur on ur.id = u.urban_rural_enum  "
	                + " inner join company_learners_trade_test cltt on cltt.company_learners_id = cl.id "
	                + " inner join company ct on ct.id = cltt.`preferred_training_center_id` "
	                + " inner join training_provider_application tpat on tpat.company_id = ct.id and tpat.`accreditation_number` is not null "
	                + " left join etqa etqt on etqt.id = ct.etqa_id  "
	                + "  inner join summative_assessment_report sar on sar.company_learners_id = cl.id "
	                + " inner join summative_assessment_report_unit_standards sarus on sarus.summative_assessment_report_id = sar.id "
	                + " inner join saqa_unitstandard su on su.id = sarus.unit_standards_id "
	                + " UNION ALL  "
	                + " select u.rsa_id_number as nationalId  "
	                + " , u.passport_number as personAlternateId  "
	                + " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType  "
	                + " , su.unitstandardid as unitStandardId  "
	                + " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId  "
	                + " , '' as assessorRegistrationNumber  "
	                + " , '7' as enrolmentTypeId  "
	                + " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate  "
	                + " , cl.registered_date as enrolmentDate  "
	                + " , '' as filler01   "
	                + " , '3' as partOf  "
	                + " , sq.qualificationid as qualificationId  "
	                + " , lship.code as learnershipId  "
	                + " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode  "
	                + " , etqa.setmis_code as providerETQEId  "
	                + " , '' as assessorETQEId  "
	                + " , '' as filler02  "
	                + " , '' as filler03  "
	                + " , '' as enrolmentStatusReasonId  "
	                + " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate "
	                + " , '' as filler04  "
	                + " , '' as filler05  "
	                + " , '' as filler06  "
	                + " , et.setmis_code as economicStatusId  "
	                + " , '' as filler07  "
	                + " , '' as filler08  "
	                + " , '' as filler09  "
	                + " , '' as cumulativeSpend "
	                + " , '' as certificateNumber  "
	                + " , f.setmis_code as fundingId  "
	                + " , ofo.setmis_code as oFOCode  "
	                + " , c.levy_number as sDLNo "
	                + " , c.company_site_number as siteNo "
	                + " , '' as nonNQFIntervCode   "
	                + " , '' as nonNQFIntervETQEId   "
	                + " , ur.setmis_code as urbanRuralId  "
	                + " , CURDATE() as dateStamp "
	                + " from company_learners cl  "
	                + " inner join users u on u.id = cl.user_id "
	                + " inner join learnership lship on lship.id = cl.learnership_id "
	                + " inner join saqa_qualification sq on sq.id = lship.qualification_id and qualificationtypeid <> 554 "
	                + " inner join intervention_type it on it.id = cl.intervention_type_id  "
	                + " inner join company c on c.id = cl.company_id "
	                + " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null "
	                + " left join etqa on etqa.id = c.etqa_id  "
	                + " inner join employment_type et on et.employment_status = u.employment_status  "
	                + " left join funding f on f.id = cl.funding "
	                + " left join ofo on ofo.id = cl.ofo_codes_id  "
	                + " left join urbal_rural ur on ur.id = u.urban_rural_enum  "
	                + "  inner join summative_assessment_report sar on sar.company_learners_id = cl.id "
	                + " inner join summative_assessment_report_unit_standards sarus on sarus.summative_assessment_report_id = sar.id "
	                + " inner join saqa_unitstandard su on su.id = sarus.unit_standards_id "
	                + " where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is null and cl.learnership_id is not null "
	                + " UNION ALL  "
	                + " select u.rsa_id_number as nationalId  "
	                + " , u.passport_number as personAlternateId  "
	                + " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType  "
	                + " , su.unitstandardid as unitStandardId  "
	                + " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId  "
	                + " , '' as assessorRegistrationNumber  "
	                + " , '7' as enrolmentTypeId  "
	                + " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate  "
	                + " , cl.registered_date as enrolmentDate  "
	                + " , '' as filler01  "
	                + " , '5' as partOf  "
	                + " , sq.qualificationid as qualificationId  "
	                + " , '' as learnershipId  "
	                + " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode  "
	                + " , etqa.setmis_code as providerETQEId  "
	                + " , '' as assessorETQEId  "
	                + " , '' as filler02  "
	                + " , '' as filler03  "
	                + " , '' as enrolmentStatusReasonId  "
	                + " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate "
	                + " , '' as filler04  "
	                + " , '' as filler05  "
	                + " , '' as filler06  "
	                + " , et.setmis_code as economicStatusId  "
	                + " , '' as filler07  "
	                + " , '' as filler08  "
	                + " , '' as filler09  "
	                + " , '' as cumulativeSpend "
	                + " , '' as certificateNumber  "
	                + " , f.setmis_code as fundingId  "
	                + " , ofo.setmis_code as oFOCode  "
	                + " , c.levy_number as sDLNo "
	                + " , c.company_site_number as siteNo "
	                + " , '' as nonNQFIntervCode  "
	                + " , '' as nonNQFIntervETQEId  "
	                + " , ur.setmis_code as urbanRuralId  "
	                + " , CURDATE() as dateStamp "
	                + " from company_learners cl  "
	                + " inner join users u on u.id = cl.user_id "
	                + " inner join skills_set sset on sset.id = cl.skills_set_id "
	                + " inner join saqa_qualification sq on sq.id = sset.qualification_id and qualificationtypeid <> 554 "
	                + " inner join intervention_type it on it.id = cl.intervention_type_id  "
	                + " inner join company c on c.id = cl.company_id "
	                + " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null "
	                + " left join etqa on etqa.id = c.etqa_id  "
	                + " inner join employment_type et on et.employment_status = u.employment_status  "
	                + " left join funding f on f.id = cl.funding "
	                + " left join ofo on ofo.id = cl.ofo_codes_id  "
	                + " left join urbal_rural ur on ur.id = u.urban_rural_enum  "
	                + "  inner join summative_assessment_report sar on sar.company_learners_id = cl.id "
	                + " inner join summative_assessment_report_unit_standards sarus on sarus.summative_assessment_report_id = sar.id "
	                + " inner join saqa_unitstandard su on su.id = sarus.unit_standards_id "
	                + " where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is not null and cl.learnership_id is null "
	                + " UNION ALL "
	                + " select u.rsa_id_number as nationalId  "
	                + " , u.passport_number as personAlternateId  "
	                + " , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType  "
	                + " , su.unitstandardid as unitStandardId  "
	                + " , IF(cl.completion_date is NULL, '3', '2' ) as enrolmentStatusId  "
	                + " , '' as assessorRegistrationNumber  "
	                + " , '7' as enrolmentTypeId  "
	                + " , IF(cl.completion_date is NULL, cl.registered_date, cl.completion_date) as enrolmentStatusDate  "
	                + " , cl.registered_date as enrolmentDate  "
	                + " , '' as filler01  "
	                + " , '5' as partOf  "
	                + " , sq.qualificationid as qualificationId  "
	                + " , '' as learnershipId  "
	                + " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode  "
	                + " , etqa.setmis_code as providerETQEId  "
	                + " , '' as assessorETQEId  "
	                + " , '' as filler02  "
	                + " , '' as filler03  "
	                + " , '' as enrolmentStatusReasonId  "
	                + " , IF(date(cl.completion_date) is NULL, date(cl.registered_date), date(cl.completion_date)) as mostRecentRegistrationDate "
	                + " , '' as filler04  "
	                + " , '' as filler05  "
	                + " , '' as filler06  "
	                + " , et.setmis_code as economicStatusId  "
	                + " , '' as filler07  "
	                + " , '' as filler08  "
	                + " , '' as filler09  "
	                + " , '' as cumulativeSpend "
	                + " , '' as certificateNumber  "
	                + " , f.setmis_code as fundingId  "
	                + " , ofo.setmis_code as oFOCode  "
	                + " , c.levy_number as sDLNo "
	                + " , c.company_site_number as siteNo "
	                + " , '' as nonNQFIntervCode   "
	                + " , '' as nonNQFIntervETQEId   "
	                + " , ur.setmis_code as urbanRuralId  "
	                + " , CURDATE() as dateStamp "
	                + " from company_learners cl  "
	                + " inner join users u on u.id = cl.user_id "
	                + " inner join skills_program spro on spro.id = cl.skills_set_id "
	                + " inner join saqa_qualification sq on sq.id = spro.qualification_id and qualificationtypeid <> 554 "
	                + " inner join intervention_type it on it.id = cl.intervention_type_id  "
	                + " inner join company c on c.id = cl.company_id "
	                + " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null "
	                + " left join etqa on etqa.id = c.etqa_id  "
	                + " inner join employment_type et on et.employment_status = u.employment_status  "
	                + " left join funding f on f.id = cl.funding "
	                + " left join ofo on ofo.id = cl.ofo_codes_id  "
	                + " left join urbal_rural ur on ur.id = u.urban_rural_enum  "
	                + " inner join summative_assessment_report sar on sar.company_learners_id = cl.id "
	                + " inner join summative_assessment_report_unit_standards sarus on sarus.summative_assessment_report_id = sar.id "
	                + " inner join saqa_unitstandard su on su.id = sarus.unit_standards_id "
	                + " where cl.qualification_id is null and cl.skills_program_id is not null and cl.skills_set_id is null and cl.learnership_id is null ";
	        return (int) super.nativeSQLInsert(sql);
	    }
	    
	    @SuppressWarnings("unchecked")
	    public List<SetmisFile503> allSetmisFile503() throws Exception {
	        return (List<SetmisFile503>)super.getList("select o from SetmisFile503 o");
	    }

	public List<SETMISFile505Bean> extractSETMISFile505Bean() throws Exception {
		String sql = " select u.rsa_id_number as nationalId "
				+ " , u.passport_number as personAlternateId "
				+ " , IF(u.passport_number is not NULL,533,527)  as alternativeIdType "
				+ " , sq.qualificationid as qualificationId "
				+ " , cltt.id as tradeTestNumber "
				+ " , IF(cltt.competence_enum is null, 2, IF(cltt.competence_enum = 0, 1, 2)) as tradeTestResultId"
				+ " , CONCAT('MERSETA-' , tpat.accreditation_number) as tradeTestProviderCode"
				+ " , '' as assessorRegistrationNumber"
				+ " , '' as moderatorRegistrationNumber"
				+ " , cltt.date_of_test as tradeTestDate"
				+ " , '' as tradeTestResultReasonId"
				+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode"
				+ " , etqa.setmis_code as providerETQEId "
				+ " , etqt.setmis_code as tradeTestProviderETQEId "
				+ " , '' as assessorETQEId "
				+ " , '' as moderatorETQEId "
				+ " , CURDATE() as dateStamp "
				+ " from company_learners cl "
				+ " inner join users u on u.id = cl.user_id"
				+ " inner join saqa_qualification sq on sq.id = cl.qualification_id and qualificationtypeid = 554"
				+ " inner join intervention_type it on it.id = cl.intervention_type_id "
				+ " inner join company c on c.id = cl.company_id"
				+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ " left join etqa on etqa.id = c.etqa_id "
				+ " inner join employment_type et on et.employment_status = u.employment_status "
				+ " left join funding f on f.id = cl.funding"
				+ " left join ofo on ofo.id = cl.ofo_codes_id "
				+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ " inner join company_learners_trade_test cltt on cltt.company_learners_id = cl.id"
				+ " inner join company ct on ct.id = cltt.`preferred_training_center_id`"
				+ " inner join training_provider_application tpat on tpat.company_id = ct.id and tpat.accreditation_number is not null"
				+ " left join etqa etqt on etqt.id = ct.etqa_id  ";
		return (List<SETMISFile505Bean>) super.nativeSelectSqlList(sql, SETMISFile505Bean.class);
	}
	
	public int extractSetmisFile505Insert() throws Exception {
	        String sql = " INSERT INTO setmis_file_505 ( national_id, "
	                + " person_alternate_id, "
	                + " alternative_id_type, "
	                + " qualification_id, "
	                + " trade_test_number, "
	                + " trade_test_result_id, "
	                + " trade_test_provider_code, "
	                + " assessor_registration_number, "
	                + " moderator_registration_number, "
	                + " trade_test_date, "
	                + " trade_test_result_reason_id, "
	                + " provider_code, "
	                + " provider_etqe_id, "
	                + " trade_test_provider_etqe_id, "
	                + " assessor_etqe_id, "
	                + " moderator_etqe_id, "
	                + " date_stamp ) "
	                + " select u.rsa_id_number as nationalId "
					+ " , u.passport_number as personAlternateId "
					+ " , IF(u.passport_number is not NULL,533,527)  as alternativeIdType "
					+ " , sq.qualificationid as qualificationId "
					+ " , cltt.id as tradeTestNumber "
					+ " , IF(cltt.competence_enum is null, 2, IF(cltt.competence_enum = 0, 1, 2)) as tradeTestResultId"
					+ " , CONCAT('MERSETA-' , tpat.accreditation_number) as tradeTestProviderCode"
					+ " , '' as assessorRegistrationNumber"
					+ " , '' as moderatorRegistrationNumber"
					+ " , cltt.date_of_test as tradeTestDate"
					+ " , '' as tradeTestResultReasonId"
					+ " , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode"
					+ " , etqa.setmis_code as providerETQEId "
					+ " , etqt.setmis_code as tradeTestProviderETQEId "
					+ " , '' as assessorETQEId "
					+ " , '' as moderatorETQEId "
					+ " , CURDATE() as dateStamp "
					+ " from company_learners cl "
					+ " inner join users u on u.id = cl.user_id"
					+ " inner join saqa_qualification sq on sq.id = cl.qualification_id and qualificationtypeid = 554"
					+ " inner join intervention_type it on it.id = cl.intervention_type_id "
					+ " inner join company c on c.id = cl.company_id"
					+ " inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
					+ " left join etqa on etqa.id = c.etqa_id "
					+ " inner join employment_type et on et.employment_status = u.employment_status "
					+ " left join funding f on f.id = cl.funding"
					+ " left join ofo on ofo.id = cl.ofo_codes_id "
					+ " left join urbal_rural ur on ur.id = u.urban_rural_enum "
					+ " inner join company_learners_trade_test cltt on cltt.company_learners_id = cl.id"
					+ " inner join company ct on ct.id = cltt.`preferred_training_center_id`"
					+ " inner join training_provider_application tpat on tpat.company_id = ct.id and tpat.accreditation_number is not null"
					+ " left join etqa etqt on etqt.id = ct.etqa_id  ";
	        return (int) super.nativeSQLInsert(sql);
	    }
	    @SuppressWarnings("unchecked")
	    public List<SetmisFile505> allSetmisFile505() throws Exception {
	        return (List<SetmisFile505>)super.getList("select o from SetmisFile505 o");
	    }
	    


	public List<SETMISFile506Bean> extractSETMISFile506Bean() throws Exception {
		String sql = " select u.rsa_id_number as nationalId "
				+ "  , u.passport_number as personAlternateId "
				+ "  , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ "  , sq.qualificationid as qualificationId "
				+ "  , cl.completion_date as qualificationAchievementDate "
				+ "  , IF(cl.status = 21,'2','1')   as  internshipStatusId "
				+ "  , cl.commencement_date as startDate"
				+ "  , cl.completion_date as endDate"
				+ "  , c.levy_number as sDLNo "
				+ "  , c.company_site_number as siteNo"
				+ "  , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode"
				+ "  , etqa.setmis_code as providerETQEId"
				+ "  , f.setmis_code as fundingId"
				+ "  , '' as  cumulativeSpend"
				+ "  , ofo.setmis_code as oFOCode"
				+ "  , ur.setmis_code as urbanRuralId "
				+ "  , CURDATE() as dateStamp  "
				+ "  from company_learners cl "
				+ "  inner join users u on u.id = cl.user_id"
				+ "  inner join saqa_qualification sq on sq.id = cl.qualification_id and qualificationtypeid <> 554"
				+ "  inner join intervention_type it on it.id = cl.intervention_type_id and it.setmis_code = 4"
				+ "  inner join company c on c.id = cl.company_id"
				+ "  inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ "  left join etqa on etqa.id = c.etqa_id "
				+ "  inner join employment_type et on et.employment_status = u.employment_status "
				+ "  left join funding f on f.id = cl.funding"
				+ "  left join ofo on ofo.id = cl.ofo_codes_id "
				+ "  left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ "  UNION ALL"
				+ " select u.rsa_id_number as nationalId "
				+ "  , u.passport_number as personAlternateId "
				+ "  , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ "  , sq.qualificationid as qualificationId "
				+ "  , cl.completion_date as qualificationAchievementDate "
				+ "  , IF(cl.status = 21,'2','1')   as  internshipStatusId "
				+ "  , cl.commencement_date as startDate"
				+ "  , cl.completion_date as endDate"
				+ "  , c.levy_number as sDLNo "
				+ "  , c.company_site_number as siteNo"
				+ "  , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode"
				+ "  , etqa.setmis_code as providerETQEId"
				+ "  , f.setmis_code as fundingId"
				+ "  , '' as  cumulativeSpend"
				+ "  , ofo.setmis_code as oFOCode"
				+ "  , ur.setmis_code as urbanRuralId "
				+ "  , CURDATE() as dateStamp"
				+ "  from company_learners cl "
				+ "  inner join users u on u.id = cl.user_id"
				+ "  inner join saqa_qualification sq on sq.id = cl.qualification_id and qualificationtypeid = 554"
				+ "  inner join intervention_type it on it.id = cl.intervention_type_id and it.setmis_code = 4"
				+ "  inner join company c on c.id = cl.company_id"
				+ "  inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ "  left join etqa on etqa.id = c.etqa_id "
				+ "  inner join employment_type et on et.employment_status = u.employment_status "
				+ "  left join funding f on f.id = cl.funding"
				+ "  left join ofo on ofo.id = cl.ofo_codes_id "
				+ "  left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ "  inner join company_learners_trade_test cltt on cltt.company_learners_id = cl.id"
				+ "  inner join company ct on ct.id = cltt.`preferred_training_center_id`"
				+ "  inner join training_provider_application tpat on tpat.company_id = ct.id and tpat.`accreditation_number` is not null"
				+ "  left join etqa etqt on etqt.id = ct.etqa_id "
				+ "  UNION ALL"
				+ "  select u.rsa_id_number as nationalId "
				+ "  , u.passport_number as personAlternateId "
				+ "  , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ "  , sq.qualificationid as qualificationId "
				+ "  , cl.completion_date as qualificationAchievementDate "
				+ "  , IF(cl.status = 21,'2','1')   as  internshipStatusId "
				+ "  , cl.commencement_date as startDate"
				+ "  , cl.completion_date as endDate"
				+ "  , c.levy_number as sDLNo "
				+ "  , c.company_site_number as siteNo"
				+ "  , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode"
				+ "  , etqa.setmis_code as providerETQEId"
				+ "  , f.setmis_code as fundingId"
				+ "  , '' as  cumulativeSpend"
				+ "  , ofo.setmis_code as oFOCode"
				+ "  , ur.setmis_code as urbanRuralId "
				+ "  , CURDATE() as dateStamp"
				+ "  from company_learners cl "
				+ "  inner join users u on u.id = cl.user_id"
				+ "  inner join learnership lship on lship.id = cl.learnership_id"
				+ "  inner join saqa_qualification sq on sq.id = lship.qualification_id and qualificationtypeid <> 554"
				+ "  inner join intervention_type it on it.id = cl.intervention_type_id and it.setmis_code = 4"
				+ "  inner join company c on c.id = cl.company_id"
				+ "  inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ "  left join etqa on etqa.id = c.etqa_id "
				+ "  inner join employment_type et on et.employment_status = u.employment_status "
				+ "  left join funding f on f.id = cl.funding"
				+ "  left join ofo on ofo.id = cl.ofo_codes_id "
				+ "  left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ "  where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is null and cl.learnership_id is not null"
				+ "  UNION ALL"
				+ "  select u.rsa_id_number as nationalId "
				+ "  , u.passport_number as personAlternateId "
				+ "  , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ "  , sq.qualificationid as qualificationId "
				+ "  , cl.completion_date as qualificationAchievementDate "
				+ "  , IF(cl.status = 21,'2','1')   as  internshipStatusId "
				+ "  , cl.commencement_date as startDate"
				+ "  , cl.completion_date as endDate"
				+ "  , c.levy_number as sDLNo "
				+ "  , c.company_site_number as siteNo"
				+ "  , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode"
				+ "  , etqa.setmis_code as providerETQEId"
				+ "  , f.setmis_code as fundingId"
				+ "  , '' as  cumulativeSpend"
				+ "  , ofo.setmis_code as oFOCode"
				+ "  , ur.setmis_code as urbanRuralId "
				+ "  , CURDATE() as dateStamp"
				+ "  from company_learners cl "
				+ "  inner join users u on u.id = cl.user_id"
				+ "  inner join skills_set sset on sset.id = cl.skills_set_id"
				+ "  inner join saqa_qualification sq on sq.id = sset.qualification_id and qualificationtypeid <> 554"
				+ "  inner join intervention_type it on it.id = cl.intervention_type_id and it.setmis_code = 4"
				+ "  inner join company c on c.id = cl.company_id"
				+ "  inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ "  left join etqa on etqa.id = c.etqa_id "
				+ "  inner join employment_type et on et.employment_status = u.employment_status "
				+ "  left join funding f on f.id = cl.funding"
				+ "  left join ofo on ofo.id = cl.ofo_codes_id "
				+ "  left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ "  where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is not null and cl.learnership_id is null"
				+ "  UNION ALL"
				+ "  select u.rsa_id_number as nationalId "
				+ "  , u.passport_number as personAlternateId "
				+ "  , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ "  , sq.qualificationid as qualificationId "
				+ "  , cl.completion_date as qualificationAchievementDate "
				+ "  , IF(cl.status = 21,'2','1')   as  internshipStatusId "
				+ "  , cl.commencement_date as startDate"
				+ "  , cl.completion_date as endDate"
				+ "  , c.levy_number as sDLNo "
				+ "  , c.company_site_number as siteNo"
				+ "  , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode"
				+ "  , etqa.setmis_code as providerETQEId"
				+ "  , f.setmis_code as fundingId"
				+ "  , '' as  cumulativeSpend"
				+ "  , ofo.setmis_code as oFOCode"
				+ "  , ur.setmis_code as urbanRuralId "
				+ "  , CURDATE() as dateStamp "
				+ "  from company_learners cl "
				+ "  inner join users u on u.id = cl.user_id"
				+ "  inner join skills_program spro on spro.id = cl.skills_set_id"
				+ "  inner join saqa_qualification sq on sq.id = spro.qualification_id and qualificationtypeid <> 554"
				+ "  inner join intervention_type it on it.id = cl.intervention_type_id and it.setmis_code = 4"
				+ "  inner join company c on c.id = cl.company_id"
				+ "  inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ "  left join etqa on etqa.id = c.etqa_id "
				+ "  inner join employment_type et on et.employment_status = u.employment_status "
				+ "  left join funding f on f.id = cl.funding"
				+ "  left join ofo on ofo.id = cl.ofo_codes_id "
				+ "  left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ "  where cl.qualification_id is null and cl.skills_program_id is not null and cl.skills_set_id is null and cl.learnership_id is null ";
		return (List<SETMISFile506Bean>) super.nativeSelectSqlList(sql, SETMISFile506Bean.class);
	}
	
    public int extractSetmisFile506Insert() throws Exception {
        String sql = " INSERT INTO setmis_file_506 ( national_id, "
                + " person_alternative_id, "
                + " aternative_id_type_id, "
                + " qualification_id, "
                + " qualification_achievement_date, "
                + " internship_status_id, "
                + " start_date, "
                + " end_date, "
                + " sdl_no, "
                + " site_no, "
                + " provider_code, "
                + " provider_etqe_id, "
                + " funding_id, "
                + " cumulative_spend, "
                + " ofo_code, "
                + " urban_rural_id, "
                + " date_stamp ) "
                + " select u.rsa_id_number as nationalId "
				+ "  , u.passport_number as personAlternateId "
				+ "  , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ "  , sq.qualificationid as qualificationId "
				+ "  , cl.completion_date as qualificationAchievementDate "
				+ "  , IF(cl.status = 21,'2','1')   as  internshipStatusId "
				+ "  , cl.commencement_date as startDate"
				+ "  , cl.completion_date as endDate"
				+ "  , c.levy_number as sDLNo "
				+ "  , c.company_site_number as siteNo"
				+ "  , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode"
				+ "  , etqa.setmis_code as providerETQEId"
				+ "  , f.setmis_code as fundingId"
				+ "  , '' as  cumulativeSpend"
				+ "  , ofo.setmis_code as oFOCode"
				+ "  , ur.setmis_code as urbanRuralId "
				+ "  , CURDATE() as dateStamp  "
				+ "  from company_learners cl "
				+ "  inner join users u on u.id = cl.user_id"
				+ "  inner join saqa_qualification sq on sq.id = cl.qualification_id and qualificationtypeid <> 554"
				+ "  inner join intervention_type it on it.id = cl.intervention_type_id and it.setmis_code = 4"
				+ "  inner join company c on c.id = cl.company_id"
				+ "  inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ "  left join etqa on etqa.id = c.etqa_id "
				+ "  inner join employment_type et on et.employment_status = u.employment_status "
				+ "  left join funding f on f.id = cl.funding"
				+ "  left join ofo on ofo.id = cl.ofo_codes_id "
				+ "  left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ "  UNION ALL"
				+ " select u.rsa_id_number as nationalId "
				+ "  , u.passport_number as personAlternateId "
				+ "  , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ "  , sq.qualificationid as qualificationId "
				+ "  , cl.completion_date as qualificationAchievementDate "
				+ "  , IF(cl.status = 21,'2','1')   as  internshipStatusId "
				+ "  , cl.commencement_date as startDate"
				+ "  , cl.completion_date as endDate"
				+ "  , c.levy_number as sDLNo "
				+ "  , c.company_site_number as siteNo"
				+ "  , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode"
				+ "  , etqa.setmis_code as providerETQEId"
				+ "  , f.setmis_code as fundingId"
				+ "  , '' as  cumulativeSpend"
				+ "  , ofo.setmis_code as oFOCode"
				+ "  , ur.setmis_code as urbanRuralId "
				+ "  , CURDATE() as dateStamp"
				+ "  from company_learners cl "
				+ "  inner join users u on u.id = cl.user_id"
				+ "  inner join saqa_qualification sq on sq.id = cl.qualification_id and qualificationtypeid = 554"
				+ "  inner join intervention_type it on it.id = cl.intervention_type_id and it.setmis_code = 4"
				+ "  inner join company c on c.id = cl.company_id"
				+ "  inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ "  left join etqa on etqa.id = c.etqa_id "
				+ "  inner join employment_type et on et.employment_status = u.employment_status "
				+ "  left join funding f on f.id = cl.funding"
				+ "  left join ofo on ofo.id = cl.ofo_codes_id "
				+ "  left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ "  inner join company_learners_trade_test cltt on cltt.company_learners_id = cl.id"
				+ "  inner join company ct on ct.id = cltt.`preferred_training_center_id`"
				+ "  inner join training_provider_application tpat on tpat.company_id = ct.id and tpat.`accreditation_number` is not null"
				+ "  left join etqa etqt on etqt.id = ct.etqa_id "
				+ "  UNION ALL"
				+ "  select u.rsa_id_number as nationalId "
				+ "  , u.passport_number as personAlternateId "
				+ "  , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ "  , sq.qualificationid as qualificationId "
				+ "  , cl.completion_date as qualificationAchievementDate "
				+ "  , IF(cl.status = 21,'2','1')   as  internshipStatusId "
				+ "  , cl.commencement_date as startDate"
				+ "  , cl.completion_date as endDate"
				+ "  , c.levy_number as sDLNo "
				+ "  , c.company_site_number as siteNo"
				+ "  , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode"
				+ "  , etqa.setmis_code as providerETQEId"
				+ "  , f.setmis_code as fundingId"
				+ "  , '' as  cumulativeSpend"
				+ "  , ofo.setmis_code as oFOCode"
				+ "  , ur.setmis_code as urbanRuralId "
				+ "  , CURDATE() as dateStamp"
				+ "  from company_learners cl "
				+ "  inner join users u on u.id = cl.user_id"
				+ "  inner join learnership lship on lship.id = cl.learnership_id"
				+ "  inner join saqa_qualification sq on sq.id = lship.qualification_id and qualificationtypeid <> 554"
				+ "  inner join intervention_type it on it.id = cl.intervention_type_id and it.setmis_code = 4"
				+ "  inner join company c on c.id = cl.company_id"
				+ "  inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ "  left join etqa on etqa.id = c.etqa_id "
				+ "  inner join employment_type et on et.employment_status = u.employment_status "
				+ "  left join funding f on f.id = cl.funding"
				+ "  left join ofo on ofo.id = cl.ofo_codes_id "
				+ "  left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ "  where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is null and cl.learnership_id is not null"
				+ "  UNION ALL"
				+ "  select u.rsa_id_number as nationalId "
				+ "  , u.passport_number as personAlternateId "
				+ "  , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ "  , sq.qualificationid as qualificationId "
				+ "  , cl.completion_date as qualificationAchievementDate "
				+ "  , IF(cl.status = 21,'2','1')   as  internshipStatusId "
				+ "  , cl.commencement_date as startDate"
				+ "  , cl.completion_date as endDate"
				+ "  , c.levy_number as sDLNo "
				+ "  , c.company_site_number as siteNo"
				+ "  , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode"
				+ "  , etqa.setmis_code as providerETQEId"
				+ "  , f.setmis_code as fundingId"
				+ "  , '' as  cumulativeSpend"
				+ "  , ofo.setmis_code as oFOCode"
				+ "  , ur.setmis_code as urbanRuralId "
				+ "  , CURDATE() as dateStamp"
				+ "  from company_learners cl "
				+ "  inner join users u on u.id = cl.user_id"
				+ "  inner join skills_set sset on sset.id = cl.skills_set_id"
				+ "  inner join saqa_qualification sq on sq.id = sset.qualification_id and qualificationtypeid <> 554"
				+ "  inner join intervention_type it on it.id = cl.intervention_type_id and it.setmis_code = 4"
				+ "  inner join company c on c.id = cl.company_id"
				+ "  inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ "  left join etqa on etqa.id = c.etqa_id "
				+ "  inner join employment_type et on et.employment_status = u.employment_status "
				+ "  left join funding f on f.id = cl.funding"
				+ "  left join ofo on ofo.id = cl.ofo_codes_id "
				+ "  left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ "  where cl.qualification_id is null and cl.skills_program_id is null and cl.skills_set_id is not null and cl.learnership_id is null"
				+ "  UNION ALL"
				+ "  select u.rsa_id_number as nationalId "
				+ "  , u.passport_number as personAlternateId "
				+ "  , IF(u.passport_number is not NULL,'533','527')  as alternativeIdType "
				+ "  , sq.qualificationid as qualificationId "
				+ "  , cl.completion_date as qualificationAchievementDate "
				+ "  , IF(cl.status = 21,'2','1')   as  internshipStatusId "
				+ "  , cl.commencement_date as startDate"
				+ "  , cl.completion_date as endDate"
				+ "  , c.levy_number as sDLNo "
				+ "  , c.company_site_number as siteNo"
				+ "  , CONCAT('MERSETA-' , tpa.`accreditation_number`) as providerCode"
				+ "  , etqa.setmis_code as providerETQEId"
				+ "  , f.setmis_code as fundingId"
				+ "  , '' as  cumulativeSpend"
				+ "  , ofo.setmis_code as oFOCode"
				+ "  , ur.setmis_code as urbanRuralId "
				+ "  , CURDATE() as dateStamp "
				+ "  from company_learners cl "
				+ "  inner join users u on u.id = cl.user_id"
				+ "  inner join skills_program spro on spro.id = cl.skills_set_id"
				+ "  inner join saqa_qualification sq on sq.id = spro.qualification_id and qualificationtypeid <> 554"
				+ "  inner join intervention_type it on it.id = cl.intervention_type_id and it.setmis_code = 4"
				+ "  inner join company c on c.id = cl.company_id"
				+ "  inner join training_provider_application tpa on tpa.company_id = c.id and tpa.`accreditation_number` is not null"
				+ "  left join etqa on etqa.id = c.etqa_id "
				+ "  inner join employment_type et on et.employment_status = u.employment_status "
				+ "  left join funding f on f.id = cl.funding"
				+ "  left join ofo on ofo.id = cl.ofo_codes_id "
				+ "  left join urbal_rural ur on ur.id = u.urban_rural_enum "
				+ "  where cl.qualification_id is null and cl.skills_program_id is not null and cl.skills_set_id is null and cl.learnership_id is null ";
        return (int) super.nativeSQLInsert(sql);
    }
    @SuppressWarnings("unchecked")
    public List<SetmisFile506> allSetmisFile506() throws Exception {
        return (List<SetmisFile506>)super.getList("select o from SetmisFile506 o");
    }
	
	public List<SETMISFile506BeanSandra> extractSETMISFile506BeanSandra() throws Exception {
		String sql = "select u.National_Id as nationalId, " 
				+ " '' as personAlternativeId,  "
				+ " '533' as aternativeIdTypeId, "
				+ "  u.Qualification_Id qualificationId, "
				 + " u.Enrolment_Date as qualificationAchievementDate,  "
				+ "  u.Enrolment_Status as internshipStatusId,  "
				+ "  u.Enrolment_Date as startDate, "
				+ "  '' as endDate,  "
				+ "  u.SDL_No as  sDLNo,  "
				+ "  '1' as siteNo,  "
				+ "  u.Provider  as providerCode,  "
				+ "  u.Provider_ETQE as providerETQEId,  "
				+ "  u.Funding_Id as fundingId, "
				+ "  '' as cumulativeSpend,  "
				+ "  u.OFO_Code as oFOCode,  "
				+ "  u.Urban_Rural as  urbanRuralID,  "
				+ "  u.LastUpDate as dateStamp "
				 + " from file506 u";
		return (List<SETMISFile506BeanSandra>) super.nativeSelectSqlList(sql, SETMISFile506BeanSandra.class);
	}
	
	
	public Integer allActiveContractDetailSetmisFile401(String alternateIdTypeId, String personAlternateId, String nationalId,String providerCode, String providerETQEId) throws Exception {
		String hql = "select count(o) from SetmisFile401 o "
				+ " where o.alternativeIdType = :alternateIdTypeId and "
				+ "  o.personAlternateId = :personAlternateId and "
				+ "  o.nationalId = :nationalId and "
				+ "  o.providerCode = :providerCode and "
				+ "  o.providerETQEId = :providerETQEId";
		Map<String, Object> parameters = new Hashtable<>();
		parameters.put("alternateIdTypeId", alternateIdTypeId);
		parameters.put("personAlternateId", personAlternateId);
		parameters.put("nationalId", nationalId);
		parameters.put("providerCode", providerCode);
		parameters.put("providerETQEId", providerETQEId);
		return ((Long) super.getUniqueResult(hql, parameters)).intValue();
	}
	
	public Integer allActiveContractDetailSetmisFile500(String alternateIdTypeId, String personAlternateId, String nationalId,String providerCode, String providerETQEId) throws Exception {
		String hql = "select count(o) from SetmisFile500 o "
				+ " where o.alternativeIdType = :alternateIdTypeId and "
				+ "  o.personAlternateId = :personAlternateId and "
				+ "  o.nationalId = :nationalId and "
				+ "  o.providerCode = :providerCode and "
				+ "  o.providerETQEId = :providerETQEId";
		Map<String, Object> parameters = new Hashtable<>();
		parameters.put("alternateIdTypeId", alternateIdTypeId);
		parameters.put("personAlternateId", personAlternateId);
		parameters.put("nationalId", nationalId);
		parameters.put("providerCode", providerCode);
		parameters.put("providerETQEId", providerETQEId);
		return ((Long) super.getUniqueResult(hql, parameters)).intValue();
	}
	
	public Integer allActiveContractDetailSetmisFile501(String alternateIdTypeId, String personAlternateId, String nationalId,String providerCode, String providerETQEId) throws Exception {
		String hql = "select count(o) from SetmisFile501 o "
				+ " where o.alternativeIdType = :alternateIdTypeId and "
				+ "  o.personAlternateId = :personAlternateId and "
				+ "  o.nationalId = :nationalId and "
				+ "  o.providerCode = :providerCode and "
				+ "  o.providerETQEId = :providerETQEId";
		Map<String, Object> parameters = new Hashtable<>();
		parameters.put("alternateIdTypeId", alternateIdTypeId);
		parameters.put("personAlternateId", personAlternateId);
		parameters.put("nationalId", nationalId);
		parameters.put("providerCode", providerCode);
		parameters.put("providerETQEId", providerETQEId);
		return ((Long) super.getUniqueResult(hql, parameters)).intValue();
	}
	
	public Integer allActiveContractDetailSetmisFile503(String alternateIdTypeId, String personAlternateId, String nationalId,String providerCode, String providerETQEId) throws Exception {
		String hql = "select count(o) from SetmisFile503 o "
				+ " where o.alternativeIdType = :alternateIdTypeId and "
				+ "  o.personAlternateId = :personAlternateId and "
				+ "  o.nationalId = :nationalId and "
				+ "  o.providerCode = :providerCode and "
				+ "  o.providerETQEId = :providerETQEId";
		Map<String, Object> parameters = new Hashtable<>();
		parameters.put("alternateIdTypeId", alternateIdTypeId);
		parameters.put("personAlternateId", personAlternateId);
		parameters.put("nationalId", nationalId);
		parameters.put("providerCode", providerCode);
		parameters.put("providerETQEId", providerETQEId);
		return ((Long) super.getUniqueResult(hql, parameters)).intValue();
	}
	
	public Integer allActiveContractDetailSetmisFile505(String alternateIdTypeId, String personAlternateId, String nationalId,String providerCode, String providerETQEId) throws Exception {
		String hql = "select count(o) from SetmisFile505 o "
				+ " where o.alternativeIdType = :alternateIdTypeId and "
				+ "  o.personAlternateId = :personAlternateId and "
				+ "  o.nationalId = :nationalId and "
				+ "  o.providerCode = :providerCode and "
				+ "  o.providerETQEId = :providerETQEId";
		Map<String, Object> parameters = new Hashtable<>();
		parameters.put("alternateIdTypeId", alternateIdTypeId);
		parameters.put("personAlternateId", personAlternateId);
		parameters.put("nationalId", nationalId);
		parameters.put("providerCode", providerCode);
		parameters.put("providerETQEId", providerETQEId);
		return ((Long) super.getUniqueResult(hql, parameters)).intValue();
	}
	
	public Integer allActiveRegNumberFile401(String assessorRegistrationNumber, String providerETQEId) throws Exception {
		String hql = "select count(o) from SetmisFile401 o "
				+ " where o.designationRegistrationNumber = :assessorRegistrationNumber and "
				+ "  o.providerETQEId = :providerETQEId";
		Map<String, Object> parameters = new Hashtable<>();
		parameters.put("assessorRegistrationNumber", assessorRegistrationNumber);
		parameters.put("providerETQEId", providerETQEId);
		return ((Long) super.getUniqueResult(hql, parameters)).intValue();
	}
	
	public Integer allActiveProviderCode(String entityName,String providerCode, String providerETQEId) throws Exception {
		String hql = "select count(o) from "+entityName+" o "
				+ " where o.providerCode = :providerCode and "
				+ "  o.providerETQEId = :providerETQEId ";
		Map<String, Object> parameters = new Hashtable<>();
		parameters.put("entityName", entityName);
		parameters.put("providerCode", providerCode);
		parameters.put("providerETQEId", providerETQEId);
		return ((Long) super.getUniqueResult(hql, parameters)).intValue();
	}
	
	public Integer allActiveSdlNumbersFile200(String sDLNo, BigInteger siteNo) throws Exception {
		String hql = "select count(o) from SetmisFile200 o "
				+ " where o.sDLNo = :sDLNo and "
				+ "  o.siteNo = :siteNo ";
		Map<String, Object> parameters = new Hashtable<>();
		parameters.put("sDLNo", sDLNo);
		parameters.put("siteNo", siteNo);
		return ((Long) super.getUniqueResult(hql, parameters)).intValue();
	}
	
	public Integer allAltIdType(String entityName,String alternativeIdType, String personAlternateId, String nationalId, String providerCode, String providerETQEId) throws Exception {
		String hql = "select count(o) from "+entityName+" o "
				+ " where o.alternateIdTypeId = :alternateIdTypeId and "
				+ "  o.personAlternateId = :personAlternateId and "
				+ "  o.nationalId = :nationalId and "
				+ "  o.providerCode = :providerCode and "
				+ "  o.providerETQEId = :providerETQEId";
		Map<String, Object> parameters = new Hashtable<>();
		parameters.put("entityName", entityName);
		parameters.put("alternativeIdType", alternativeIdType);
		parameters.put("personAlternateId", personAlternateId);
		parameters.put("nationalId", nationalId);
		parameters.put("providerCode", providerCode);
		parameters.put("providerETQEId", providerETQEId);
		return ((Long) super.getUniqueResult(hql, parameters)).intValue();
	}
	

}
