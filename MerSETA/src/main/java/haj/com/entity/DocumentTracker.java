package haj.com.entity;
// Generated May 30, 2014 10:27:06 AM by Hibernate Tools 3.6.0


import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import haj.com.entity.enums.DocumentTrackerEnum;
import haj.com.framework.IDataEntity;



// TODO: Auto-generated Javadoc
/**
 * Address generated by hbm2java.
 */
@Entity
@Table(name="document_tracker")
public class DocumentTracker  implements IDataEntity
{
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

    /** The id. */
    private Long id;
    
    /** The doc. */
    private Doc doc;
    
    /** The user. */
    private Users user;
    
    /** The date. */
    private Date date;
    
    /** The document tracker enum. */
    private DocumentTrackerEnum documentTrackerEnum;


    /**
     * Instantiates a new document tracker.
     */
    public DocumentTracker() {
    }

    

    
    /**
     * Instantiates a new document tracker.
     *
     * @param doc the doc
     * @param user the user
     * @param date the date
     * @param documentTrackerEnum the document tracker enum
     */
    public DocumentTracker(Doc doc, Users user, Date date,
			DocumentTrackerEnum documentTrackerEnum) {
		super();
		this.doc = doc;
		this.user = user;
		this.date = date;
		this.documentTrackerEnum = documentTrackerEnum;
	}




	/**
	 * Gets the id.
	 *
	 * @return the id
	 */
	@Id 
    @GeneratedValue(strategy=IDENTITY)
    @Column(name="id", unique=true, nullable=false)
	public Long getId() {
		return id;
	}

    /**
     * Sets the id.
     *
     * @param id the new id
     */
    public void setId(Long id) {
		this.id = id;
	}


    /**
     * Gets the doc.
     *
     * @return the doc
     */
    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="doc_id", nullable=false)
	public Doc getDoc() {
		return doc;
	}



	/**
	 * Sets the doc.
	 *
	 * @param doc the new doc
	 */
	public void setDoc(Doc doc) {
		this.doc = doc;
	}
	

	/**
	 * Gets the user.
	 *
	 * @return the user
	 */
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="user_id", nullable=false)
	public Users getUser() {
		return user;
	}



	/**
	 * Sets the user.
	 *
	 * @param user the new user
	 */
	public void setUser(Users user) {
		this.user = user;
	}


	/**
	 * Gets the date.
	 *
	 * @return the date
	 */
	@Column(name="date", nullable=false)
	public Date getDate() {
		return date;
	}



	/**
	 * Sets the date.
	 *
	 * @param date the new date
	 */
	public void setDate(Date date) {
		this.date = date;
	}


    /**
     * Gets the document tracker enum.
     *
     * @return the document tracker enum
     */
    @Enumerated
    @Column(name="document_tracker_enum")
	public DocumentTrackerEnum getDocumentTrackerEnum() {
		return documentTrackerEnum;
	}



	/**
	 * Sets the document tracker enum.
	 *
	 * @param documentTrackerEnum the new document tracker enum
	 */
	public void setDocumentTrackerEnum(DocumentTrackerEnum documentTrackerEnum) {
		this.documentTrackerEnum = documentTrackerEnum;
	}

	



}


