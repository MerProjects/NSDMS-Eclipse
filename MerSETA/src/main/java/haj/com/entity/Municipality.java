package haj.com.entity;
// Generated 04-May-2013 14:13:41 by Hibernate Tools 3.2.1.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import haj.com.framework.IDataEntity;

// TODO: Auto-generated Javadoc
/**
 * Municipality generated by hbm2java.
 */
@Entity
@Table(name = "municipality"

)
public class Municipality implements IDataEntity {

	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Integer id;

	/**
	 * The province. This field is required
	 */
	private Province province;
	private String municipalityDesc;

	private String code;

	/** The map. */
	private String map;

	/**
	 * The municipality type. This Filed is required
	 */
	private MunicipalityType municipalityType;

	/**
	 * The district. This field is not required
	 */
	private Municipality district;

	/** The not sumitted. */
	private Boolean notSumitted;

	/** The create date. */
	private Date createDate;

	/**
	 * Instantiates a new municipality.
	 */
	public Municipality() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * Instantiates a new municipality.
	 *
	 * @param id
	 *            the id
	 */
	public Municipality(Integer id) {
		super();
		this.id = id;
	}

	/**
	 * Instantiates a new municipality.
	 *
	 * @param province
	 *            the province
	 */
	public Municipality(Province province) {
		this.province = province;
	}

	/**
	 * Gets the id.
	 *
	 * @return the id
	 */
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	/**
	 * Sets the id.
	 *
	 * @param id
	 *            the new id
	 */
	public void setId(Integer id) {
		this.id = id;
	}

	/**
	 * Gets the province.
	 *
	 * @return the province
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@Fetch(FetchMode.JOIN)
	@JoinColumn(name = "provinces_idprovinces", nullable = false)
	public Province getProvince() {
		return this.province;
	}

	/**
	 * Sets the province.
	 *
	 * @param province
	 *            the new province
	 */
	public void setProvince(Province province) {
		this.province = province;
	}

	/**
	 * Gets the municipality desc.
	 *
	 * @return the municipality desc
	 */
	@Column(name = "municipality_desc", length = 100)
	public String getMunicipalityDesc() {
		return this.municipalityDesc;
	}

	/**
	 * Gets the municipality province.
	 *
	 * @return the municipality province
	 */
	@Transient
	public String getMunicipalityProvince() {
		return "(" + this.province.getProvinceDesc() + ") " + this.municipalityDesc;
	}

	/**
	 * Sets the municipality desc.
	 *
	 * @param municipalityDesc
	 *            the new municipality desc
	 */
	public void setMunicipalityDesc(String municipalityDesc) {
		this.municipalityDesc = municipalityDesc;
	}

	/**
	 * Gets the code.
	 *
	 * @return the code
	 */
	@Column(name = "code", length = 10)
	public String getCode() {
		return code;
	}

	/**
	 * Sets the code.
	 *
	 * @param code
	 *            the new code
	 */
	public void setCode(String code) {
		this.code = code;
	}

	/**
	 * Gets the map.
	 *
	 * @return the map
	 */
	@Column(name = "map", length = 50)
	public String getMap() {
		return map;
	}

	/**
	 * Sets the map.
	 *
	 * @param map
	 *            the new map
	 */
	public void setMap(String map) {
		this.map = map;
	}

	/**
	 * Gets the municipality type.
	 *
	 * @return the municipality type
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idmunicipalitytype", nullable = true)
	public MunicipalityType getMunicipalityType() {
		return municipalityType;
	}

	/**
	 * Sets the municipality type.
	 *
	 * @param municipalityType
	 *            the new municipality type
	 */
	public void setMunicipalityType(MunicipalityType municipalityType) {
		this.municipalityType = municipalityType;
	}

	/**
	 * Gets the district.
	 *
	 * @return the district
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "iddistrict", nullable = true)
	public Municipality getDistrict() {
		return district;
	}

	/**
	 * Sets the district.
	 *
	 * @param district
	 *            the new district
	 */
	public void setDistrict(Municipality district) {
		this.district = district;
	}

	/**
	 * Gets the not sumitted.
	 *
	 * @return the not sumitted
	 */
	@Column(name = "not_sumitted", nullable = true)
	public Boolean getNotSumitted() {
		return notSumitted;
	}

	/**
	 * Sets the not sumitted.
	 *
	 * @param notSumitted
	 *            the new not sumitted
	 */
	public void setNotSumitted(Boolean notSumitted) {
		this.notSumitted = notSumitted;
	}

	/**
	 * Gets the creates the date.
	 *
	 * @return the creates the date
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", length = 19)
	public Date getCreateDate() {
		return createDate;
	}

	/**
	 * Sets the creates the date.
	 *
	 * @param createDate
	 *            the new creates the date
	 */
	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

}
