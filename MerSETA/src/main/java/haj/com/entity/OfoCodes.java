package haj.com.entity;
// Generated Oct 6, 2015 10:32:48 AM by Hibernate Tools 4.3.1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;

import haj.com.entity.enums.TradeTypeEnum;
import haj.com.entity.lookup.OccupationCategory;
import haj.com.framework.IDataEntity;

// TODO: Auto-generated Javadoc
/**
 * OfoCsv generated by hbm2java.
 */
@Entity
@Table(name = "ofo_codes")
@AuditTable(value = "ofo_codes_hist")
@Audited
public class OfoCodes implements IDataEntity {

	/** The id. */
	private Long id;

	/**
	 * The ofo code. Field length = 15 This field is required Field may not start
	 * with a space Field may only contain whole numbers
	 */

	private String ofoCode;

	private String specialisationCode;

	/**
	 * The description. This field is required May not start with space Maximum
	 * length = 100 Uppercase value in field may only contain characters
	 * ABCDEFGHIJKLMNOPQRTSUVWXYZ1234567890@#&+() /\:._,`'
	 */
	private String description;

	/**
	 * The major group. This field is required May not start with space
	 */

	private String majorGroup; // 1

	/**
	 * The sub major group. This field is required May not start with space
	 */
	private String subMajorGroup; // 2

	/**
	 * The minor group. This field is required May not start with space
	 */
	private String minorGroup; // 3

	/**
	 * The unit group. This field is required May not start with space
	 */
	private String unitGroup; // 4

	/**
	 * The fm. This field is not required may not start with a space Maximum length
	 * = 500 Uppercase value in field may only contain characters
	 * ABCDEFGHIJKLMNOPQRTSUVWXYZ1234567890@#&+() /\:._,`'
	 */
	private String fm = "";

	/** The create date. */
	private Date createDate;

	private OccupationCategory occupationCategory;

	private OfoCodes ofoCodes;

	private Boolean trade;

	private TradeTypeEnum tradeTypeEnum;
	
	private Boolean active;
	
	private Boolean greenOccupation;
	
	private Boolean greenSkill;
	
	private Integer year;
	
	private String setmisCode;

	/**
	 * Instantiates a new ofo codes.
	 */
	public OfoCodes() {
	}

	/**
	 * Gets the ofo code.
	 *
	 * @return the ofo code
	 */
	@Column(name = "ofo_code", unique = true, nullable = false, length = 11)
	public String getOfoCode() {
		return ofoCode;
	}

	@Transient
	public String getOfoCodeParent() {
		if ((ofoCode == null || ofoCode.isEmpty()) && ofoCodes != null) {
			return this.ofoCodes.ofoCode;
		}
		return ofoCode;
	}

	/**
	 * Sets the ofo code.
	 *
	 * @param ofoCode
	 *            the new ofo code
	 */
	public void setOfoCode(String ofoCode) {
		this.ofoCode = ofoCode;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */

	@Transient
	public String getOfoDescription() {
		return "(" + (((ofoCode == null || ofoCode.isEmpty()) && ofoCodes != null) ? this.ofoCodes.ofoCode : ofoCode) + ") " + this.description;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */
	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	/**
	 * Sets the description.
	 *
	 * @param description
	 *            the new description
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * Gets the major group.
	 *
	 * @return the major group
	 */
	@Column(name = "major_group", length = 6)
	public String getMajorGroup() {
		return majorGroup;
	}

	/**
	 * Sets the major group.
	 *
	 * @param majorGroup
	 *            the new major group
	 */
	public void setMajorGroup(String majorGroup) {
		this.majorGroup = majorGroup;
	}

	/**
	 * Gets the sub major group.
	 *
	 * @return the sub major group
	 */
	@Column(name = "sub_major_group", length = 6)
	public String getSubMajorGroup() {
		return subMajorGroup;
	}

	/**
	 * Sets the sub major group.
	 *
	 * @param subMajorGroup
	 *            the new sub major group
	 */
	public void setSubMajorGroup(String subMajorGroup) {
		this.subMajorGroup = subMajorGroup;
	}

	/**
	 * Gets the minor group.
	 *
	 * @return the minor group
	 */
	@Column(name = "minor_group", length = 6)
	public String getMinorGroup() {
		return minorGroup;
	}

	/**
	 * Sets the minor group.
	 *
	 * @param minorGroup
	 *            the new minor group
	 */
	public void setMinorGroup(String minorGroup) {
		this.minorGroup = minorGroup;
	}

	/**
	 * Gets the unit group.
	 *
	 * @return the unit group
	 */
	@Column(name = "unit_group", length = 6)
	public String getUnitGroup() {
		return unitGroup;
	}

	/**
	 * Sets the unit group.
	 *
	 * @param unitGroup
	 *            the new unit group
	 */
	public void setUnitGroup(String unitGroup) {
		this.unitGroup = unitGroup;
	}

	/**
	 * Gets the fm.
	 *
	 * @return the fm
	 */
	@Column(name = "fm", length = 1000)
	public String getFm() {
		return fm;
	}

	/**
	 * Sets the fm.
	 *
	 * @param fm
	 *            the new fm
	 */
	public void setFm(String fm) {
		this.fm = fm;
	}

	/**
	 * Gets the id.
	 *
	 * @return the id
	 */
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return id;
	}

	/**
	 * Sets the id.
	 *
	 * @param id
	 *            the new id
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the creates the date.
	 *
	 * @return the creates the date
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", length = 19)
	public Date getCreateDate() {
		return createDate;
	}

	/**
	 * Sets the creates the date.
	 *
	 * @param createDate
	 *            the new creates the date
	 */
	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@Fetch(FetchMode.JOIN)
	@JoinColumn(name = "occupation_category_id", nullable = true)
	public OccupationCategory getOccupationCategory() {
		return occupationCategory;
	}

	public void setOccupationCategory(OccupationCategory occupationCategory) {
		this.occupationCategory = occupationCategory;
	}

	@Fetch(FetchMode.JOIN)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ofo_codes_id", nullable = true)
	public OfoCodes getOfoCodes() {
		return ofoCodes;
	}

	public void setOfoCodes(OfoCodes ofoCodes) {
		this.ofoCodes = ofoCodes;
	}

	@Column(name = "specialisation_code")
	public String getSpecialisationCode() {
		return specialisationCode;
	}

	public void setSpecialisationCode(String specialisationCode) {
		this.specialisationCode = specialisationCode;
	}

	@Column(name = "trade", columnDefinition = "BIT default false")
	public Boolean getTrade() {
		return trade;
	}

	public void setTrade(Boolean trade) {
		this.trade = trade;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		OfoCodes other = (OfoCodes) obj;
		if (id == null) {
			if (other.id != null) return false;
		} else if (!id.equals(other.id)) return false;
		return true;
	}

	@Enumerated(EnumType.STRING)
	@Column(name = "trade_type")
	public TradeTypeEnum getTradeTypeEnum() {
		return tradeTypeEnum;
	}

	public void setTradeTypeEnum(TradeTypeEnum tradeTypeEnum) {
		this.tradeTypeEnum = tradeTypeEnum;
	}

	@Column(name = "active")
	public Boolean getActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Column(name = "green_occupation")
	public Boolean getGreenOccupation() {
		return greenOccupation;
	}

	public void setGreenOccupation(Boolean greenOccupation) {
		this.greenOccupation = greenOccupation;
	}

	@Column(name = "green_skill")
	public Boolean getGreenSkill() {
		return greenSkill;
	}

	public void setGreenSkill(Boolean greenSkill) {
		this.greenSkill = greenSkill;
	}

	@Column(name = "year")
	public Integer getYear() {
		return year;
	}

	public void setYear(Integer year) {
		this.year = year;
	}

	@Column(name = "setmis_code")
	public String getSetmisCode() {
		return setmisCode;
	}

	public void setSetmisCode(String setmisCode) {
		this.setmisCode = setmisCode;
	}
}
